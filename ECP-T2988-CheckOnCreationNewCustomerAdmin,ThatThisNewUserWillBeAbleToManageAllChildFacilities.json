{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-15T03:44:06.755Z",
    "end": "2024-12-15T03:48:26.304Z",
    "duration": 259549,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bcabea31-3f18-4c27-94a0-34255d17c8f0",
      "title": "",
      "fullFile": "cypress/e2e/test-suites/ECP-T2988-CheckOnCreationNewCustomerAdmin,ThatThisNewUserWillBeAbleToManageAllChildFacilities.spec.ts",
      "file": "cypress/test-suites/ECP-T2988-CheckOnCreationNewCustomerAdmin,ThatThisNewUserWillBeAbleToManageAllChildFacilities.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5eaf2b14-14aa-422a-afba-a69ab3b59eae",
          "title": "ECP-T2988 - CreationOfCustomerAdminAndManageAllChildFacility - Precondition",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Starting test ECP-T2988 - Creation of Customer and orgadmin account",
              "fullTitle": "ECP-T2988 - CreationOfCustomerAdminAndManageAllChildFacility - Precondition Starting test ECP-T2988 - Creation of Customer and orgadmin account",
              "timedOut": null,
              "duration": 110047,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\n// Creation of Customer \ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\nfacility2Name = facility2Name + Cypress.currentRetry;\ncy.wrap(meteor_1.Meteor.addFacilty(customerName, facility2Name));\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.switchToFacility(facilityName);\ncy.wait(configFile.smallTimeout);\nCheckoncreationnewcustomeradminthatthisnewuserwillbeabletomanageallchildfacilities_1.Customercreationwithmultiplefacility.verifyusergroup(orggroup, 1);\nCheckoncreationnewcustomeradminthatthisnewuserwillbeabletomanageallchildfacilities_1.Customercreationwithmultiplefacility.existinguser(EmailID);\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "806eea63-9b12-495c-ad7b-b63f1563eb6b",
              "parentUUID": "5eaf2b14-14aa-422a-afba-a69ab3b59eae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login as User-B as Customer admin and verifying the child facilities",
              "fullTitle": "ECP-T2988 - CreationOfCustomerAdminAndManageAllChildFacility - Precondition Login as User-B as Customer admin and verifying the child facilities",
              "timedOut": null,
              "duration": 80449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, EmailID[0], password);\ncy.wait(configFile.mediumTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(EmailID[0], password), { timeout: configFile.hugeTimeout });\n        cy.reload();\n    }\n});\ncy.get(\"#leftNavMenu li a[title=\\\"My Facility\\\"]\", { timeout: configFile.hugeTimeout }).should('exist');\ncy.get(\"#leftNavMenu li a[title=\\\"My Organization\\\"]\", { timeout: configFile.hugeTimeout }).should('exist');\ncommon_1.Common.switchToFacility(facility2Name);\ncommon_1.Common.switchToFacility(facilityName);\ncommon_1.Common.navigateTo('My Facility');\ncommon_1.Common.navigateTo('Users & Groups');\ncy.wait(configFile.smallTimeout);\nCheckoncreationnewcustomeradminthatthisnewuserwillbeabletomanageallchildfacilities_1.Customercreationwithmultiplefacility.verifyusergroup(orggroup, 1);\ncommon_1.Common.navigateTo('My Organization');\ncommon_1.Common.navigateTo('Users & Groups', 1);\n//  ac.verifyusergroup(cusgroup,0);\n// ac.verifyusergroup(cusgroup,1);\ncy.wait(configFile.smallTimeout);\ncy.get('.editUserBtn', { timeout: configFile.longTimeout }).eq(1).click({ force: true });\ncy.wait(configFile.smallTimeout);\ncy.get('span:contains(\"' + cusgroup + '\")', { timeout: configFile.hugeTimeout }).should('exist');\ncy.get('button:contains(\"Cancel\")').click();\ncy.wait(configFile.smallTimeout);\n//Removing user A as Customer admin\ncy.get('.deleteUserBtn').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('#confirm-RemoveUser', { timeout: configFile.hugeTimeout }).click();\n//cy.waitUntil(() =>  cy.get('td:contains(\"'+EmailID[1]+'\")').should('not.exist'), { timeout: configFile.waitUntilTimeout });\n// cy.pause();\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "e23f81f4-a612-462c-8a5b-3a261e97750a",
              "parentUUID": "5eaf2b14-14aa-422a-afba-a69ab3b59eae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login as User-A as Org admin and verifying the My facility",
              "fullTitle": "ECP-T2988 - CreationOfCustomerAdminAndManageAllChildFacility - Precondition Login as User-A as Org admin and verifying the My facility",
              "timedOut": null,
              "duration": 49767,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, EmailID[1], password);\ncy.wait(configFile.mediumTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(EmailID[1], password), { timeout: configFile.hugeTimeout });\n        cy.reload();\n    }\n});\ncy.get(\"#leftNavMenu li a[title=\\\"My Facility\\\"]\", { timeout: configFile.hugeTimeout }).should('exist');\ncy.get(\"#leftNavMenu li a[title=\\\"My Organization\\\"]\", { timeout: configFile.hugeTimeout }).should('not.exist');\nCheckoncreationnewcustomeradminthatthisnewuserwillbeabletomanageallchildfacilities_1.Customercreationwithmultiplefacility.verifyusergroup(orggroup, 1);\ncy.wait(configFile.smallTimeout);\ncy.get('#facilityName').should('exist');",
              "err": {},
              "uuid": "93dc3d21-ebe2-4282-818c-56d41037198d",
              "parentUUID": "5eaf2b14-14aa-422a-afba-a69ab3b59eae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Disable facility and cleanup",
              "fullTitle": "ECP-T2988 - CreationOfCustomerAdminAndManageAllChildFacility - Precondition Disable facility and cleanup",
              "timedOut": null,
              "duration": 7214,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\n//cy.wrap(m.disableAllFacilities(customerName,'not-use-Facility'),{timeout:configFile.hugeTimeout});\ncy.wrap(meteor_1.Meteor.changeFacilityStatus(facilityName, false), { timeout: configFile.hugeTimeout });\ncy.wrap(meteor_1.Meteor.changeFacilityStatus(facility2Name, false), { timeout: configFile.hugeTimeout });",
              "err": {},
              "uuid": "2df571e2-90d8-45bf-9a59-760b74a62e20",
              "parentUUID": "5eaf2b14-14aa-422a-afba-a69ab3b59eae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "806eea63-9b12-495c-ad7b-b63f1563eb6b",
            "e23f81f4-a612-462c-8a5b-3a261e97750a",
            "93dc3d21-ebe2-4282-818c-56d41037198d",
            "2df571e2-90d8-45bf-9a59-760b74a62e20"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 247477,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome",
        "overwrite": true,
        "reportFilename": "[name]",
        "reportTitle": "SI PACS Automation",
        "reportPageTitle": "SI PACS Automation",
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}