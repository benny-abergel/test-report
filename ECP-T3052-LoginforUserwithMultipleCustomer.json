{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-15T03:31:34.226Z",
    "end": "2024-12-15T03:38:01.652Z",
    "duration": 387426,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d238999a-de69-425e-aa3b-718e5be3d5c3",
      "title": "",
      "fullFile": "cypress/e2e/test-suites/ECP-T3052-LoginforUserwithMultipleCustomer.spec.ts",
      "file": "cypress/test-suites/ECP-T3052-LoginforUserwithMultipleCustomer.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1cf571a3-6b9d-4a7c-a76b-845285d67232",
          "title": "ECP-T3052 - Login for User with Multiple Customer",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Step as System admin and Customer admin",
              "fullTitle": "ECP-T3052 - Login for User with Multiple Customer Step as System admin and Customer admin",
              "timedOut": null,
              "duration": 226788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit Base URL\n// Login as System admin\ncommon_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.mediumTimeout, true);\ncommon_1.Common.switchToFacility(facilityName);\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.switchToCustomer(customer2Name);\ncommon_1.Common.switchToFacility(facility2Name);\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.logout();\n// Visit Base URL\n// Login as Customer admin\ncommon_1.Common.login(customerName, custadmin, userpassword);\ncy.wait(configFile.mediumTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(custadmin, userpassword), { timeout: configFile.hugeTimeout });\n        cy.reload();\n    }\n});\ncy.get('.CustomerSelector').find('.Select-value.needsclick').click();\ncy.get('[aria-label=\"' + customerName + '\"]').should('exist');\ncy.get('[aria-label=\"' + customer2Name + '\"]').should('exist');\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\ncy.get('[data-cy=\"adminNavLink\"]').should('exist');\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.switchToCustomer(customer2Name);\ncommon_1.Common.switchToFacility(facility2Name);\ncy.get('[data-cy=\"adminNavLink\"]').should('exist');\ncy.wait(configFile.tinyTimeout);\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "37cd0a8f-b49b-4fa6-a408-dcd2722a31f5",
              "parentUUID": "1cf571a3-6b9d-4a7c-a76b-845285d67232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step as Facility Admin and IP User to verify Multiple Customer Access",
              "fullTitle": "ECP-T3052 - Login for User with Multiple Customer Step as Facility Admin and IP User to verify Multiple Customer Access",
              "timedOut": null,
              "duration": 137807,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit Base UR\n// Login as Facility Admin\ncommon_1.Common.login(customerName, facilityadmin, userpassword);\ncy.wait(configFile.mediumTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(facilityadmin, userpassword), { timeout: configFile.hugeTimeout });\n        cy.reload();\n    }\n});\ncy.get('.CustomerSelector').find('.Select-value.needsclick').click();\ncy.get('[aria-label=\"' + customerName + '\"]').should('exist');\ncy.get('[aria-label=\"' + customer2Name + '\"]').should('exist');\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncy.wait(configFile.tinyTimeout);\ncy.get('[data-cy=\"adminNavLink\"]').should('not.exist');\ncy.get('a[title=\"My Facility\"]').should('exist');\ncommon_1.Common.switchToCustomer(customer2Name);\ncy.get('[data-cy=\"adminNavLink\"]').should('not.exist');\ncy.get('a[title=\"My Facility\"]').should('exist');\ncommon_1.Common.logout();\ncy.wait(configFile.smallTimeout);\n// Login as IP user\n// Visit Base URL\ncommon_1.Common.login(customerName, ipuser, userpassword);\ncy.wait(configFile.mediumTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(ipuser, userpassword), { timeout: configFile.hugeTimeout });\n        cy.reload();\n    }\n});\ncy.get('.CustomerSelector').find('.Select-value.needsclick').click();\ncy.get('[aria-label=\"' + customerName + '\"]').should('exist');\ncy.get('[aria-label=\"' + customer2Name + '\"]').should('exist');\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncy.wait(configFile.tinyTimeout);\ncy.get('a[title=\"My Facility\"]').should('not.exist');\ncommon_1.Common.switchToCustomer(customer2Name);\ncy.get('a[title=\"My Facility\"]').should('not.exist');",
              "err": {},
              "uuid": "08ec1f03-feb2-4427-a883-c26c34b3b813",
              "parentUUID": "1cf571a3-6b9d-4a7c-a76b-845285d67232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Post step - Cleanup",
              "fullTitle": "ECP-T3052 - Login for User with Multiple Customer Post step - Cleanup",
              "timedOut": null,
              "duration": 7178,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\nmeteor_1.Meteor.changeFacilityStatus(facilityName, false);\nmeteor_1.Meteor.changeFacilityStatus(facility2Name, false);",
              "err": {},
              "uuid": "91f7aadb-4f10-40f6-a2b0-3a4fa428a7cf",
              "parentUUID": "1cf571a3-6b9d-4a7c-a76b-845285d67232",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37cd0a8f-b49b-4fa6-a408-dcd2722a31f5",
            "08ec1f03-feb2-4427-a883-c26c34b3b813",
            "91f7aadb-4f10-40f6-a2b0-3a4fa428a7cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 371773,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome",
        "overwrite": true,
        "reportFilename": "[name]",
        "reportTitle": "SI PACS Automation",
        "reportPageTitle": "SI PACS Automation",
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}