{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-15T02:30:05.121Z",
    "end": "2024-12-15T02:34:51.540Z",
    "duration": 286419,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2ec51c2e-8465-4fb8-a1f1-0c4f429eea4e",
      "title": "",
      "fullFile": "cypress/e2e/test-suites/ECP-T3522-PJAllStudies.spec.ts",
      "file": "cypress/test-suites/ECP-T3522-PJAllStudies.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d67babd-aa8c-42c7-b0e3-2832ae4a56eb",
          "title": "ECP-T3522 - User is checking the UI of patient jacket",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "ECP-T3522 - data prep",
              "fullTitle": "ECP-T3522 - User is checking the UI of patient jacket ECP-T3522 - data prep",
              "timedOut": null,
              "duration": 90210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\ncy.reload();\ncommon_1.Common.navigateTo('Sharing List');\ncy.waitUntil(function () { return cy.get('.pageTitle').should('be.visible'); }, { timeout: configFile.hugeTimeout });\nmeteor_1.Meteor.changeFeatures({\n    allowAPIs: true,\n    allowHl7: true,\n    allowWorkstationViewer: true,\n    allowWorklist: true\n}, facilityName);\ncommon_1.Common.createAPIToken(\"api_token_for_org_\".concat(facilityName)).then(function (res) {\n    token = res.token;\n    orgId = res.orgId;\n    console.log('token: ', token, ' , orgId: ', orgId);\n    //Upload studys from resources folder\n    var examUploadCmd = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/PJ-test/1\", \" -keepAlive=1\");\n    cy.exec(examUploadCmd, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n        .then(function (_a) {\n        var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n        console.log(code, stdout, stderr);\n    });\n    cy.wait(configFile.smallTimeout);\n});\ncommon_1.Common.switchToCustomer('System');\ncommon_1.Common.navigateTo('System Settings');\ncommon_1.Common.switchTab('Localization');\ncy.get('.form-group > label:contains(\"Time Format\")').parent('.form-group').find('.Select-arrow-zone').click({ force: true });\ncy.get('[aria-label=\"12hr AM/PM\"]').click();\ncy.get('[id=\"save\"]').click({ force: true });\ncy.get('[id=\"save\"]').should('not.be.enabled', { timeout: configFile.mediumTimeout });",
              "err": {},
              "uuid": "b413165a-21c6-405a-94a8-fa640fd66a56",
              "parentUUID": "9d67babd-aa8c-42c7-b0e3-2832ae4a56eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step 1 - 9 Unmatched Study",
              "fullTitle": "ECP-T3522 - User is checking the UI of patient jacket Step 1 - 9 Unmatched Study",
              "timedOut": null,
              "duration": 56381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1 - Load Worklist\ncommon_1.Common.login(customerName, accAdmUser, accAdmPass);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(accAdmUser, accAdmPass));\n        cy.reload();\n    }\n});\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\ncy.contains(\"Clear All\").first().click();\nworklist_common_1.Worklist.filterByFacility(facilityName);\ncy.waitUntil(function () { return cy.get('[data-cy=\"examDescription-cell\"][title=\"first\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\n// changeStatus('Dictated');\n// Step 2 - All Studies Listing - Unmatched Study\ncy.get(\"[data-cy='examDescription-cell'][title='first']\").first().dblclick();\ncheckPJ();\ncy.get('[data-cy=\"examDescription-cell[1]\"]').should('exist'); // This is second row\ncy.get('[data-cy=\"modalitiesString-cell[4]\"]').should('exist'); // by default has 5 rows\n//check dates ordering by DESC\ncy.get('[data-cy=\"examOriginalDateTime-cell[0]\"][title=\"02-11-2005 11:00 PM\"]').should('exist');\ncy.get('[data-cy=\"examOriginalDateTime-cell[1]\"][title=\"02-11-2004 11:00 PM\"]').should('exist');\ncy.get('[data-cy=\"examOriginalDateTime-cell[2]\"][title=\"02-11-2003 11:00 PM\"]').should('exist');\ncy.get('[data-cy=\"examOriginalDateTime-cell[3]\"][title=\"02-11-2002 11:00 PM\"]').should('exist');\ncy.get('[data-cy=\"examOriginalDateTime-cell[4]\"][title=\"02-11-2001 11:00 PM\"]').should('exist');\n// Step 3 - Demographics Mismatch - Unmatched Study\n//cy.get('span:contains(\"Acceptance^Bar^Mr\")').first().should('have.class', 'patientMismatch');\ncy.get('span:contains(\"Acceptance, Bar Mr\").patientMismatch').should('be.visible');\n// Step 4 - Edge Server Query Success - Unmatched Study\n// Step 5 - Edge Server Query Failure - Unmatched Study\n// Step 6 - Modality Column - Unmatched Study\n// cant use multi-modality in study.\n// Step 7 - Body Part/Modality Filter - Unmatched Study\ncy.get('.pj__section-layout [data-cy*=\"modalitiesString-cell\"]:contains(\"US\")').should('exist');\ncy.get('.pj__priors__quick-filters label:contains(\"Same Modality\") input[type=\"checkbox\"]').check();\ncy.get('.pj__section-layout [data-cy*=\"modalitiesString-cell\"]:contains(\"US\")').should('have.length', 0);\ncy.get('.pj__priors__quick-filters label:contains(\"Same Modality\") input[type=\"checkbox\"]').uncheck();\ncy.get('.pj__section-layout [data-cy*=\"bodyPartExamined-cell\"]:contains(\"HEAD\")').should('exist');\ncy.get('.pj__priors__quick-filters label:contains(\"Same Body Part\") input[type=\"checkbox\"]').check();\ncy.get('.pj__section-layout [data-cy*=\"bodyPartExamined-cell\"]:contains(\"HEAD\")').should('have.length', 0);\ncy.get('.pj__priors__quick-filters label:contains(\"Same Body Part\") input[type=\"checkbox\"]').uncheck();\ncy.reload();\n// Step 8 - Add/Remove Related Exams - Unmatched Study\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\ncy.contains(\"Clear All\").first().click();\nworklist_common_1.Worklist.filterByFacility(facilityName);\ncy.waitUntil(function () { return cy.get('[data-cy=\"examDescription-cell\"][title=\"first\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\n// changeStatus('Dictated');\ncy.get(\"[data-cy='examDescription-cell'][title='body part']\").first().dblclick();\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.get('.pj__exam__identifier').eq(0).should('have.class', '--newer');\ncy.get('.pj__exam__identifier').eq(1).should('have.class', '--current');\ncy.get('.pj__exam__identifier').eq(2).should('have.class', '--p1');\ncy.get('.pj__exam__identifier').eq(3).should('have.class', '--p2');\ncy.get('.pj__exam__identifier').eq(4).should('have.class', '--p3');\n// Step 9 - No MRN/Date of Birth - Unmatched Study\ncy.get('.pj__section-layout [data-cy*=\"examDescription-cell\"]:contains(\"empty mrn\")').should('have.length', 0);\ncy.get('.pj__section-layout [data-cy*=\"examDescription-cell\"]:contains(\"empty birth date\")').should('have.length', 0);",
              "err": {},
              "uuid": "1abb1f56-ccfb-400a-8267-0d92cf6c6a9b",
              "parentUUID": "9d67babd-aa8c-42c7-b0e3-2832ae4a56eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Orders And matched",
              "fullTitle": "ECP-T3522 - User is checking the UI of patient jacket Add Orders And matched",
              "timedOut": null,
              "duration": 63434,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var e_1, _a;\nvar header = {\n    Authorization: \"Bearer \".concat(token),\n    Accept: 'application/json; charset=utf-8',\n    'Content-Type': 'application/json; charset=utf-8'\n};\nvar examUploadCmd = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/PJ-test/2\", \" -keepAlive=1\");\ncy.exec(examUploadCmd, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n    .then(function (_a) {\n    var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n    console.log(code, stdout, stderr);\n});\ncy.wait(configFile.smallTimeout);\ntry {\n    for (var orders_1 = __values(orders), orders_1_1 = orders_1.next(); !orders_1_1.done; orders_1_1 = orders_1.next()) {\n        var exm = orders_1_1.value;\n        cy.request({\n            url: procedureUrl,\n            method: 'POST',\n            body: getProcedureBody('cypress-e2e-test', exm.mrn, exm.id > 'b' ? exm.name.replace('^^', \"^\".concat(exm.id, \"^\")) : exm.name, exm.dob, exm.examDate, exm.description, exm.mod, exm.bodyPart, \"P-T3522-\".concat(exm.id)),\n            headers: header,\n        }).then(function (res) {\n        });\n    }\n}\ncatch (e_1_1) { e_1 = { error: e_1_1 }; }\nfinally {\n    try {\n        if (orders_1_1 && !orders_1_1.done && (_a = orders_1.return)) _a.call(orders_1);\n    }\n    finally { if (e_1) throw e_1.error; }\n}\ncommon_1.Common.login(customerName, accAdmUser, accAdmPass);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(accAdmUser, accAdmPass));\n        cy.reload();\n    }\n});\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\ncy.contains(\"Clear All\").first().click();\nworklist_common_1.Worklist.filterByFacility(facilityName);\nmatchProcStudy('P-T3522-d', 'T3522-d', \"accessionNumber-cell\");\n// clear all filters\ncy.get('[data-cy=\"filterChipsContainer\"]').then(function ($filterChips) {\n    if ($filterChips.find('button:contains(Clear All)').length) {\n        cy.get('[data-cy=\"filterChipsContainer\"]').children().contains('Clear All').click();\n    }\n});\ncy.get(\"[data-cy=\\\"worklistTableBody\\\"] span[title=\\\"T3522-j\\\"]\").first().rightclick({ force: true });\ncy.get('[data-cy=\"workflowAdministration\"]').first().click();\ncy.get('[data-cy=\"matchUnmatch\"]').first().click();\ncy.get('input#accessionNumber').type('P-T3522-d');\ncy.get('.checkbox-inline-group .checkbox [for=\"includeMatchedProcedures\"]').click();\ncy.get('button[name=\"search\"]').first().click();\ncy.get('.react-table-row:first-child .nui-checkbox').click({ force: true });\ncy.get('.modal-footer .match-button button').first().click();\ncy.get('.popover-btn-group .btn.btn-primary').first().click();\ncy.wait(configFile.smallTimeout);\ncy.get(\"[data-cy=\\\"worklistTableBody\\\"] span[title=\\\"T3522-k\\\"]\").first().rightclick({ force: true });\ncy.get('[data-cy=\"workflowAdministration\"]').first().click();\ncy.get('[data-cy=\"matchUnmatch\"]').first().click();\ncy.get('input#accessionNumber').type('P-T3522-d');\ncy.get('.checkbox-inline-group .checkbox [for=\"includeMatchedProcedures\"]').click();\ncy.get('button[name=\"search\"]').first().click();\ncy.get('.react-table-row:first-child .nui-checkbox').click({ force: true });\ncy.get('.modal-footer .match-button button').first().click();\ncy.get('.popover-btn-group .btn.btn-primary').first().click();",
              "err": {},
              "uuid": "350a17c4-c2a3-459f-83a3-e6f89e04e330",
              "parentUUID": "9d67babd-aa8c-42c7-b0e3-2832ae4a56eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step 10 - 15 Matched Exams",
              "fullTitle": "ECP-T3522 - User is checking the UI of patient jacket Step 10 - 15 Matched Exams",
              "timedOut": null,
              "duration": 31263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 10 - Demographics Mismatch - Matched Exam\ncommon_1.Common.login(customerName, accAdmUser, accAdmPass);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(accAdmUser, accAdmPass));\n        cy.reload();\n    }\n});\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\ncy.contains(\"Clear All\").first().click();\nworklist_common_1.Worklist.filterByFacility(facilityName);\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"] span[title=\"P-T3522-d\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\n// changeStatus('Dictated');\ncy.get(\"[data-cy='accessionNumber-cell'][title='P-T3522-d']\").first().dblclick();\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Exam Date');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Mod');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Exam Description');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Patient');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Gender');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Body Part');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Indication');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Organization');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Source');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Referring');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Images');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Exam Status');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Accession');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Primary Location');\n//cy.get('span:contains(\"Acceptance^Bar^Mr\")').first().should('have.class', 'patientMismatch');\ncy.get('span:contains(\"Acceptance, Bar Mr\").patientMismatch').should('be.visible');\n// Step 11 - Edge Server Query Success - Matched Exam\n// Step 12 - Edge Server Query Failure - Matched Exam\n// Step 13 - Modality Column - Matched Exam\ncy.get('[data-cy=\"modalitiesString-cell[1]\"').should('have.text', 'PT/CT/PX');\n// Step 14 - Body Part/Modality Filter - Matched Exam\ncy.get('.pj__section-layout [data-cy*=\"modalitiesString-cell\"]:contains(\"US\")').should('exist');\ncy.get('.pj__priors__quick-filters label:contains(\"Same Modality\") input[type=\"checkbox\"]').check();\ncy.get('.pj__section-layout [data-cy*=\"modalitiesString-cell\"]:contains(\"US\")').should('have.length', 0);\ncy.get('.pj__priors__quick-filters label:contains(\"Same Modality\") input[type=\"checkbox\"]').uncheck();\ncy.get('.pj__section-layout [data-cy*=\"bodyPartExamined-cell\"]:contains(\"LUNGS\")').should('exist');\ncy.get('.pj__priors__quick-filters label:contains(\"Same Body Part\") input[type=\"checkbox\"]').check();\ncy.get('.pj__section-layout [data-cy*=\"bodyPartExamined-cell\"]:contains(\"LUNGS\")').should('have.length', 0);\ncy.get('.pj__priors__quick-filters label:contains(\"Same Body Part\") input[type=\"checkbox\"]').uncheck();\n// Step 15 - Add/Remove Related Exams - Matched Exam\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.get('.pj__exam__identifier').eq(0).should('have.class', '--newer');\ncy.get('.pj__exam__identifier').eq(1).should('have.class', '--current');\ncy.get('.pj__exam__identifier').eq(2).should('have.class', '--p1');\ncy.get('.pj__exam__identifier').eq(3).should('have.class', '--p2');\ncy.get('.pj__exam__identifier').eq(4).should('have.class', '--p3');",
              "err": {},
              "uuid": "d0ef25b3-19e0-482a-8a3b-cbf16daf3c9f",
              "parentUUID": "9d67babd-aa8c-42c7-b0e3-2832ae4a56eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add attached Report to every Order Matched Exam",
              "fullTitle": "ECP-T3522 - User is checking the UI of patient jacket Add attached Report to every Order Matched Exam",
              "timedOut": null,
              "duration": 1411,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var e_2, _a;\nvar header = {\n    Authorization: \"Bearer \".concat(token),\n    Accept: 'application/json; charset=utf-8',\n    'Content-Type': 'application/json; charset=utf-8'\n};\ntry {\n    for (var orders_2 = __values(orders), orders_2_1 = orders_2.next(); !orders_2_1.done; orders_2_1 = orders_2.next()) {\n        var exm = orders_2_1.value;\n        cy.request({\n            url: oruUrl,\n            method: 'POST',\n            body: getProcedureBody('cypress-e2e-test', exm.mrn, exm.name, exm.dob, exm.examDate, exm.description, exm.mod, exm.bodyPart, \"P-T3522-\".concat(exm.id), true),\n            headers: header,\n        }).then(function (res) {\n            console.log(\"RES: \", res);\n        });\n    }\n}\ncatch (e_2_1) { e_2 = { error: e_2_1 }; }\nfinally {\n    try {\n        if (orders_2_1 && !orders_2_1.done && (_a = orders_2.return)) _a.call(orders_2);\n    }\n    finally { if (e_2) throw e_2.error; }\n}",
              "err": {},
              "uuid": "a36f4290-1c01-4d18-83e2-d545fd02c713",
              "parentUUID": "9d67babd-aa8c-42c7-b0e3-2832ae4a56eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step 16 - 22, Matched Exam with an attached Report",
              "fullTitle": "ECP-T3522 - User is checking the UI of patient jacket Step 16 - 22, Matched Exam with an attached Report",
              "timedOut": null,
              "duration": 32432,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 16 - All Studies Listing - Matched Exam with an attached Report\ncommon_1.Common.login(customerName, accAdmUser, accAdmPass);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(accAdmUser, accAdmPass));\n        cy.reload();\n    }\n});\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\ncy.contains(\"Clear All\").first().click();\nworklist_common_1.Worklist.filterByFacility(facilityName);\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"] span[title=\"P-T3522-d\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\n// changeStatus('Dictated');\ncy.get(\"[data-cy='accessionNumber-cell'][title='P-T3522-d']\").first().dblclick();\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Exam Date');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Mod');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Exam Description');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Patient');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Gender');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Body Part');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Indication');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Organization');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Source');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Referring');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Images');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Exam Status');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Accession');\ncy.get('.lm_item_container div.rt-thead.-header').should('contain', 'Primary Location');\n// Step 17 - Demographics Mismatch - Matched Exam with an attached Report\n// cy.get('span:contains(\"Acceptance^Bar^Mr\")').first().should('have.class', 'patientMismatch');\ncy.get('span:contains(\"Acceptance, Bar Mr\").patientMismatch').should('be.visible');\n// Step 18 - Edge Server Query Success - Matched Exam with an attached Report\n// Step 19 - Edge Server Query Failure - Matched Exam with an attached Report\n// Step 20 - Modality Column - Matched Exam with an attached Report\ncy.get('[data-cy=\"modalitiesString-cell[1]\"').should('have.text', 'PT/CT/PX');\n// Step 21 - Body Part/Modality Filter - Matched Exam with an attached Report\ncy.get('.pj__section-layout [data-cy*=\"modalitiesString-cell\"]:contains(\"US\")').should('exist');\ncy.get('.pj__priors__quick-filters label:contains(\"Same Modality\") input[type=\"checkbox\"]').check();\ncy.get('.pj__section-layout [data-cy*=\"modalitiesString-cell\"]:contains(\"US\")').should('have.length', 0);\ncy.get('.pj__priors__quick-filters label:contains(\"Same Modality\") input[type=\"checkbox\"]').uncheck();\ncy.get('.pj__section-layout [data-cy*=\"bodyPartExamined-cell\"]:contains(\"LUNGS\")').should('exist');\ncy.get('.pj__priors__quick-filters label:contains(\"Same Body Part\") input[type=\"checkbox\"]').check();\ncy.get('.pj__section-layout [data-cy*=\"bodyPartExamined-cell\"]:contains(\"LUNGS\")').should('have.length', 0);\ncy.get('.pj__priors__quick-filters label:contains(\"Same Body Part\") input[type=\"checkbox\"]').uncheck();\n// Step 22 - Add/Remove Related Exams - Matched Exam with an attached Report\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.icon__PlusSquare').first().parent('button').click();\ncy.get('.pj__exam__identifier').eq(0).should('have.class', '--newer');\ncy.get('.pj__exam__identifier').eq(1).should('have.class', '--current');\ncy.get('.pj__exam__identifier').eq(2).should('have.class', '--p1');\ncy.get('.pj__exam__identifier').eq(3).should('have.class', '--p2');\ncy.get('.pj__exam__identifier').eq(4).should('have.class', '--p3');",
              "err": {},
              "uuid": "70181ed9-36a8-488e-9c07-5dd0d9a18f49",
              "parentUUID": "9d67babd-aa8c-42c7-b0e3-2832ae4a56eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Disable facility and cleanup",
              "fullTitle": "ECP-T3522 - User is checking the UI of patient jacket Disable facility and cleanup",
              "timedOut": null,
              "duration": 7818,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\nmeteor_1.Meteor.changeFacilityStatus(facilityName, false);",
              "err": {},
              "uuid": "da2d4861-1cf1-4822-b5f2-4993e55b83f8",
              "parentUUID": "9d67babd-aa8c-42c7-b0e3-2832ae4a56eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b413165a-21c6-405a-94a8-fa640fd66a56",
            "1abb1f56-ccfb-400a-8267-0d92cf6c6a9b",
            "350a17c4-c2a3-459f-83a3-e6f89e04e330",
            "d0ef25b3-19e0-482a-8a3b-cbf16daf3c9f",
            "a36f4290-1c01-4d18-83e2-d545fd02c713",
            "70181ed9-36a8-488e-9c07-5dd0d9a18f49",
            "da2d4861-1cf1-4822-b5f2-4993e55b83f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 282949,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome",
        "overwrite": true,
        "reportFilename": "[name]",
        "reportTitle": "SI PACS Automation",
        "reportPageTitle": "SI PACS Automation",
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}