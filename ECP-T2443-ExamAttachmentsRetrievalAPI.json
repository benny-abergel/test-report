{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-15T03:21:27.834Z",
    "end": "2024-12-15T03:26:42.343Z",
    "duration": 314509,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "99d0d1e4-63c9-4e3e-bb8c-474fca8d0d91",
      "title": "",
      "fullFile": "cypress/e2e/test-suites/ECP-T2443-ExamAttachmentsRetrievalAPI.spec.ts",
      "file": "cypress/test-suites/ECP-T2443-ExamAttachmentsRetrievalAPI.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eadf7a8f-c86b-4d14-ad6f-2bc233167704",
          "title": "ECP-T2442 - Exam Attachment Delete API ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Step 1-2",
              "fullTitle": "ECP-T2442 - Exam Attachment Delete API  Step 1-2",
              "timedOut": null,
              "duration": 116302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\ncy.wait(configFile.smallTimeout);\n// Verify That All required features are enabled\nmeteor_1.Meteor.changeFeatures({\n    allowAPIs: true,\n    allowInboundSharing: true,\n    allowOutboundSharing: true,\n    allowWorkstationViewer: true\n}, facilityName);\n//Step 1\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.createAPIToken(\"api_token_for_org_\".concat(facilityName)).then(function (res) {\n    token = res.token;\n    orgId = res.orgId;\n    console.log('token: ', token, ' , orgId: ', orgId);\n    //Step 2\n    var examUploadCmd_01 = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/Overlay_Test\", \" -keepAlive=1\");\n    cy.exec(examUploadCmd_01, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n        .then(function (_a) {\n        var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n        console.log(code, stdout, stderr);\n    });\n    cy.wait(configFile.smallTimeout);\n    common_1.Common.navigateTo('Sharing List');\n    cy.waitUntil(function () { return cy.get('[title=\"Overlay, Test\"]').should('be.visible'); }, { timeout: configFile.hugeTimeout });\n    cy.wait(configFile.smallTimeout);\n    cy.get('.expanderCell').click();\n    cy.get(iex.moreInfo).click();\n    cy.wait(configFile.smallTimeout);\n    cy.get(iex.examID).then(function (el) {\n        examID = el.text();\n        meteor_1.Meteor.getViewerUrls(configFile.url, configFile.username, configFile.password, examID, orgId, 'ndxWeb')\n            .then(function (viewerUrls) {\n            // @ts-ignore\n            ndxViewerUrl = viewerUrls;\n        });\n    });\n});",
              "err": {},
              "uuid": "37f73545-d9c5-42de-a5f7-f71c34c71e7b",
              "parentUUID": "eadf7a8f-c86b-4d14-ad6f-2bc233167704",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step 3-4",
              "fullTitle": "ECP-T2442 - Exam Attachment Delete API  Step 3-4",
              "timedOut": null,
              "duration": 106056,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.mediumTimeout, true);\ncommon_1.Common.navigateTo('Sharing List');\ncy.wait(configFile.smallTimeout);\ncy.get('[title=\"View Exam Images\"]').last().click();\ncy.wait(configFile.mediumTimeout);\ncommon_1.Common.closeOtherTabs();\ncy.visit(\"\".concat(ndxViewerUrl));\n// m.login(customerName,'#Layer_1', `${configFile.url}/${ndxViewerUrl}`, true, userName,userpassword, configFile.longTimeout);\ncy.get(ndxViewer.viewerLogo, { timeout: configFile.longTimeout }).should('exist');\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (el) {\n    if (el.find('.popoverBtnGroup > .btn').length > 0) {\n        cy.get('.popoverBtnGroup > .btn').click();\n    }\n});\ncy.wait(configFile.smallTimeout);\ncy.get('#panelButton').click();\ncy.get('[data-config]').first().click();\ncy.get('.imageThumbnailOverlay').dblclick();\ncy.wait(configFile.smallTimeout);\ncy.get('#capture').click();\ncy.get('#full').click();\ncy.wait(configFile.smallTimeout);\ncy.get('.imageViewerViewport').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.imageViewerViewport').click();\ncy.wait(configFile.mediumTimeout);\nRetrievalurl = \"\".concat(configFile.url, \"/attachment/study/\").concat(examID, \"?type=VIEWPORT_CAPTURE\");\n//API call\nheader = {\n    Authorization: \"Bearer \".concat(token),\n    'Content-Type': 'application/json; charset=utf-8'\n};\nreturn cy.request({\n    url: Retrievalurl,\n    method: 'GET',\n    headers: header\n}).then(function (response) {\n    expect(response.status).to.equals(200);\n    expect(response.body[0].name).to.equal('viewport-capture');\n    expect(response.body[0].fileExtension).to.equal('jpeg');\n    expect(response.body[0].fileSize);\n    expect(response.body[0].createdAt);\n    expect(response.body[0].updatedAt);\n    expect(response.body[0].updatedByUserId);\n    expect(response.body[0].urls.view);\n    expect(response.body[0].urls.download);\n    expect(response.body[0].urls.delete);\n    capturedurl = response.body[0].urls.delete;\n});",
              "err": {},
              "uuid": "9de13514-eaa1-4853-95cc-0ce8bad90356",
              "parentUUID": "eadf7a8f-c86b-4d14-ad6f-2bc233167704",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deleting the Attachment",
              "fullTitle": "ECP-T2442 - Exam Attachment Delete API  Deleting the Attachment",
              "timedOut": null,
              "duration": 1886,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "header = {\n    Authorization: \"Bearer \".concat(token),\n    'Content-Type': 'application/json; charset=utf-8'\n};\nreturn cy.request({\n    url: capturedurl,\n    method: 'DELETE',\n    headers: header\n}).then(function (response) {\n    expect(response.status).to.equals(200);\n});",
              "err": {},
              "uuid": "d631a103-ad56-4212-bae7-086d4ae9bd85",
              "parentUUID": "eadf7a8f-c86b-4d14-ad6f-2bc233167704",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifying the response without attachment",
              "fullTitle": "ECP-T2442 - Exam Attachment Delete API  Verifying the response without attachment",
              "timedOut": null,
              "duration": 865,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Retrievalurl = \"\".concat(configFile.url, \"/attachment/study/\").concat(examID, \"?type=VIEWPORT_CAPTURE\");\n//API call\nheader = {\n    Authorization: \"Bearer \".concat(token),\n    'Content-Type': 'application/json; charset=utf-8'\n};\nreturn cy.request({\n    url: Retrievalurl,\n    method: 'GET',\n    headers: header\n}).then(function (response) {\n    expect(response.status).to.equals(200);\n    expect(response.body).to.have.length(0);\n});",
              "err": {},
              "uuid": "5c086211-1990-413a-8e42-ab5d58804448",
              "parentUUID": "eadf7a8f-c86b-4d14-ad6f-2bc233167704",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid Study ID",
              "fullTitle": "ECP-T2442 - Exam Attachment Delete API  Invalid Study ID",
              "timedOut": null,
              "duration": 827,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Retrievalurl = \"\".concat(configFile.url, \"/attachment/study/3753ggggn?type=VIEWPORT_CAPTURE\");\n//API call\nheader = {\n    Authorization: \"Bearer \".concat(token),\n    'Content-Type': 'application/json; charset=utf-8'\n};\nreturn cy.request({\n    url: Retrievalurl,\n    failOnStatusCode: false,\n    method: 'GET',\n    headers: header\n}).then(function (response) {\n    expect(response.status).to.equals(404);\n});",
              "err": {},
              "uuid": "ac049ca6-401e-44be-8cf4-046cf2be9a0e",
              "parentUUID": "eadf7a8f-c86b-4d14-ad6f-2bc233167704",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Study Id for Different Organization",
              "fullTitle": "ECP-T2442 - Exam Attachment Delete API  Study Id for Different Organization",
              "timedOut": null,
              "duration": 59611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facility2Name);\ncy.wait(configFile.smallTimeout);\n// Verify That All required features are enabled\nmeteor_1.Meteor.changeFeatures({\n    allowAPIs: true,\n    allowInboundSharing: true,\n    allowOutboundSharing: true,\n    allowWorkstationViewer: true\n}, facility2Name);\n//Step 1\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.createAPIToken(\"api_token_for_org_\".concat(facilityName)).then(function (res) {\n    token = res.token;\n    orgId = res.orgId;\n    console.log('token: ', token, ' , orgId: ', orgId);\n    //Step 2\n    var examUploadCmd_01 = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/a-01\", \" -keepAlive=1\");\n    cy.exec(examUploadCmd_01, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n        .then(function (_a) {\n        var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n        console.log(code, stdout, stderr);\n    });\n    cy.wait(configFile.smallTimeout);\n    common_1.Common.navigateTo('Sharing List');\n    cy.waitUntil(function () { return cy.get('[title=\"a-01\"]').should('be.visible'); }, { timeout: configFile.hugeTimeout });\n    cy.wait(configFile.smallTimeout);\n    cy.get('.expanderCell').click();\n    cy.get(iex.moreInfo).click();\n    cy.wait(configFile.smallTimeout);\n    cy.get(iex.examID).then(function (el) {\n        examID2 = el.text();\n        Retrievalurl = \"\".concat(configFile.url, \"/attachment/study/\").concat(examID, \"?type=VIEWPORT_CAPTURE\");\n        //API call\n        header = {\n            Authorization: \"Bearer \".concat(token),\n            'Content-Type': 'application/json; charset=utf-8'\n        };\n        return cy.request({\n            url: Retrievalurl,\n            failOnStatusCode: false,\n            method: 'GET',\n            headers: header\n        }).then(function (response) {\n            expect(response.status).to.equals(404);\n        });\n    });\n});",
              "err": {},
              "uuid": "287b03ab-3b47-43c3-90c4-ce93498ee54c",
              "parentUUID": "eadf7a8f-c86b-4d14-ad6f-2bc233167704",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid Token",
              "fullTitle": "ECP-T2442 - Exam Attachment Delete API  Invalid Token",
              "timedOut": null,
              "duration": 828,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Retrievalurl = \"\".concat(configFile.url, \"/attachment/study/\").concat(examID, \"?type=VIEWPORT_CAPTURE\");\n//API call\nheader = {\n    Authorization: \"Bearer 37355899273hahbbb\",\n    'Content-Type': 'application/json; charset=utf-8'\n};\nreturn cy.request({\n    url: Retrievalurl,\n    failOnStatusCode: false,\n    method: 'GET',\n    headers: header\n}).then(function (response) {\n    expect(response.status).to.equals(403);\n});",
              "err": {},
              "uuid": "7845a68c-b43e-4574-93a0-61e28cc5dd41",
              "parentUUID": "eadf7a8f-c86b-4d14-ad6f-2bc233167704",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Disable facility and cleanup",
              "fullTitle": "ECP-T2442 - Exam Attachment Delete API  Disable facility and cleanup",
              "timedOut": null,
              "duration": 7774,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\nmeteor_1.Meteor.changeFacilityStatus(facilityName, false);",
              "err": {},
              "uuid": "4b76af0b-918b-44cd-898d-1097066066b6",
              "parentUUID": "eadf7a8f-c86b-4d14-ad6f-2bc233167704",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37f73545-d9c5-42de-a5f7-f71c34c71e7b",
            "9de13514-eaa1-4853-95cc-0ce8bad90356",
            "d631a103-ad56-4212-bae7-086d4ae9bd85",
            "5c086211-1990-413a-8e42-ab5d58804448",
            "ac049ca6-401e-44be-8cf4-046cf2be9a0e",
            "287b03ab-3b47-43c3-90c4-ce93498ee54c",
            "7845a68c-b43e-4574-93a0-61e28cc5dd41",
            "4b76af0b-918b-44cd-898d-1097066066b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 294149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome",
        "overwrite": true,
        "reportFilename": "[name]",
        "reportTitle": "SI PACS Automation",
        "reportPageTitle": "SI PACS Automation",
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}