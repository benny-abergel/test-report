{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-15T03:16:32.892Z",
    "end": "2024-12-15T03:22:40.437Z",
    "duration": 367545,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f80f8623-10c0-4edf-bcbe-e66e288127c0",
      "title": "",
      "fullFile": "cypress/e2e/test-suites/ECP-T2630-DICOMStructuredReportAttachments.spec.ts",
      "file": "cypress/test-suites/ECP-T2630-DICOMStructuredReportAttachments.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c40d1518-7ae0-47f9-9790-c93a7d64a850",
          "title": "ECP-T2630-DICOM Structured Report attachments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Uploading the Required data set",
              "fullTitle": "ECP-T2630-DICOM Structured Report attachments Uploading the Required data set",
              "timedOut": null,
              "duration": 151035,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\nmeteor_1.Meteor.changeFeatures({\n    allowAPIs: true,\n    allowInboundSharing: true,\n    allowOutboundSharing: true\n}, facilityName);\ncy.wait(configFile.smallTimeout);\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.createAPIToken(\"api_token_for_org_\".concat(facilityName)).then(function (res) {\n    token = res.token;\n    orgId = res.orgId;\n    console.log('token: ', token, ' , orgId: ', orgId);\n    // Step 1 - Study Upload:  Login to the test environment with a restricted user account and upload the 1st 3 studies from the acceptance set.\n    // upload exam now\n    var examUploadCmd_01 = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/a-46\", \" -keepAlive=1\");\n    cy.exec(examUploadCmd_01, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n        .then(function (_a) {\n        var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n        console.log(code, stdout, stderr);\n    });\n    cy.wait(configFile.smallTimeout);\n    var examUploadCmd_02 = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/Complete\", \" -keepAlive=1\");\n    cy.exec(examUploadCmd_02, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n        .then(function (_a) {\n        var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n        console.log(code, stdout, stderr);\n    });\n    var examUploadCmd_03 = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/partial\", \" -keepAlive=1\");\n    cy.exec(examUploadCmd_03, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n        .then(function (_a) {\n        var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n        console.log(code, stdout, stderr);\n    });\n    var examUploadCmd_04 = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/partial_unverified\", \" -keepAlive=1\");\n    cy.exec(examUploadCmd_04, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n        .then(function (_a) {\n        var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n        console.log(code, stdout, stderr);\n    });\n    cy.wait(configFile.smallTimeout);\n    var examUploadCmd_05 = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/EmptyReport\", \" -keepAlive=1\");\n    cy.exec(examUploadCmd_05, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n        .then(function (_a) {\n        var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n        console.log(code, stdout, stderr);\n    });\n    cy.wait(configFile.smallTimeout);\n    var examUploadCmd_06 = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/c-66\", \" -keepAlive=1\");\n    cy.exec(examUploadCmd_06, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n        .then(function (_a) {\n        var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n        console.log(code, stdout, stderr);\n    });\n    cy.wait(configFile.smallTimeout);\n}).catch(function (err) {\n    console.log(err);\n});\ncy.wait(configFile.smallTimeout);\ncy.get('#orgId').then(function (el) {\n    orgId = el.text();\n});\ncommon_1.Common.navigateTo('Sharing List');\ncy.waitUntil(function () { return cy.get('[title=\"c-066\"]').should('be.visible'); }, { timeout: configFile.hugeTimeout });\ncy.get('.expanderCell').first().click();\ncy.wait(configFile.smallTimeout);\ncy.get(iex.moreInfo).click();\ncy.wait(configFile.smallTimeout);\nvar examID = '';\ncy.get(iex.examID).then(function (el) {\n    examID = el.text();\n    meteor_1.Meteor.getViewerUrls(configFile.url, configFile.username, configFile.password, examID, orgId, 'ndxWeb')\n        .then(function (viewerUrls) {\n        // @ts-ignore\n        MultiSR = viewerUrls;\n    });\n});\ncy.wait(configFile.smallTimeout);\ncy.get('.expanderCell').eq(1).click();\ncy.wait(configFile.smallTimeout);\ncy.get(iex.moreInfo).click();\ncy.wait(configFile.smallTimeout);\nexamID = '';\ncy.get(iex.examID).then(function (el) {\n    examID = el.text();\n    meteor_1.Meteor.getViewerUrls(configFile.url, configFile.username, configFile.password, examID, orgId, 'ndxWeb')\n        .then(function (viewerUrls) {\n        // @ts-ignore\n        EmptySr = viewerUrls;\n    });\n});",
              "err": {},
              "uuid": "529a2f1f-b10b-4f58-8617-ebf31c11f6b9",
              "parentUUID": "c40d1518-7ae0-47f9-9790-c93a7d64a850",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "All Steps",
              "fullTitle": "ECP-T2630-DICOM Structured Report attachments All Steps",
              "timedOut": null,
              "duration": 61040,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\nmeteor_1.Meteor.changeFeatures({\n    allowEdgeServer: true,\n    allowAPIs: true,\n    allowNixViewerApi: true,\n    allowWorkstationViewer: true\n}, facilityName);\ncy.wait(configFile.smallTimeout);\n// Open the attachment and View the details of Attachment\ncy.get('.exam-attachments-btn').eq(5).click();\ncy.get('label:contains(Structured Reports)').should('exist');\ncy.get('.verified[title=\"YES\"]').should('exist');\ncy.get('.completed[title=\"YES\"]').should('exist');\ncy.get('.js-view-structured-report').should('exist');\ncy.get('.open-structured-report-menu').should('exist');\ncy.get('b:contains(Date: )').should('exist');\ncy.get('span:contains(03-15-2017)').should('exist');\ncy.get('[title=\"Structured Report 1\"]').should('exist');\n//View SR report\ncy.get('.js-view-structured-report').click();\ncy.wait(configFile.smallTimeout);\ncy.get('.modal-title.inline-block').should('exist');\ncy.get('canvas').should('exist');\ncy.get('.modal-header > .close > span').click();\n//Download functionality of SR report\ncy.get('.exam-attachments-btn').eq(5).click();\ncy.get('.open-structured-report-menu').click();\ncy.get('.js-download-structured-report').should('exist').click();\ncy.get('.js-delete-attachment').should('not.exist');\ncy.get('.js-edit-attachment').should('not.exist');\n//Open the attachment which has multiple Attachments\ncy.get('.exam-attachments-btn').eq(0).click();\ncy.get('[title=\"Structured Report 1\"]').should('exist');\ncy.get('[title=\"Structured Report 2\"]').should('exist');\ncy.get('[title=\"Structured Report 3\"]').should('exist');\n// Open the attachment with  The SR_BASICTEXT_COMPLETE_VERIFIED\ncommon_1.Common.navigateTo('General Settings');\ncy.get('label:contains(Structured Report Visibility)').should('exist');\ncy.get('[title=\"Completed and Verified\"]').should('exist').click();\ncy.get('[aria-label=\"Always\"]').click();\ncy.get('#save').click();\ncy.wait(configFile.smallTimeout * 3);\ncommon_1.Common.navigateTo('Sharing List');\ncy.reload();\ncy.waitUntil(function () { return cy.get('[title=\"c-066\"]').should('be.visible'); }, { timeout: configFile.hugeTimeout });\ncy.get('.exam-attachments-btn').eq(4).click();\ncy.get('label:contains(Structured Reports)').should('exist');\ncy.get('.verified[title=\"YES\"]').should('exist');\ncy.get('.completed[title=\"YES\"]').should('exist');\ncy.get('.js-view-structured-report').should('exist');\ncy.get('.open-structured-report-menu').should('exist');\ncy.get('b:contains(Date: )').should('exist');\ncy.get('span:contains(10-12-2017)').should('exist');\ncy.get('[title=\"Structured Report 1\"]').should('exist');\ncy.get('.attachments-close-btn').click();\n//Open the attachment with SR_BASICTEXT_PARTIAL_UNVERIFIED\ncy.get('.exam-attachments-btn').eq(2).click();\ncy.get('label:contains(Structured Reports)').should('exist');\ncy.get('span:contains(Verified) [title=\"NO\"]').should('exist');\ncy.get('span:contains(Completed) [title=\"NO\"]').should('exist');\ncy.get('.js-view-structured-report').should('exist');\ncy.get('.open-structured-report-menu').should('exist');\ncy.get('[title=\"Structured Report 1\"]').should('exist');\ncy.get('b:contains(Date: )').should('exist');\ncy.get('.attachments-close-btn').click();\n//Open the attachment with SR_BASICTEXT_PARTIAL_VERIFIED\ncy.get('.exam-attachments-btn').eq(3).click();\ncy.get('label:contains(Structured Reports)').should('exist');\ncy.get('.verified[title=\"YES\"]').should('exist');\ncy.get('span:contains(Completed) [title=\"NO\"]').should('exist');\ncy.get('.js-view-structured-report').should('exist');\ncy.get('.open-structured-report-menu').should('exist');\ncy.get('[title=\"Structured Report 1\"]').should('exist');\ncy.get('b:contains(Date: )').should('exist');\ncy.get('.attachments-close-btn').click();\n// Open the Attachment with Empty SR\ncy.get('.exam-attachments-btn').eq(1).click();\ncy.get('label:contains(Structured Reports)').should('exist');\ncy.get('.verified[title=\"YES\"]').should('exist');\ncy.get('[title=\"COMPLETED\"]').should('exist');\ncy.get('.js-view-structured-report').should('exist');\ncy.get('.open-structured-report-menu').should('exist');\ncy.get('[title=\"Structured Report 1\"]').should('exist');\ncy.get('b:contains(Date: )').should('exist');\ncy.get('.js-view-structured-report').click();\ncy.wait(configFile.smallTimeout);\ncy.get('.modal-title.inline-block').should('exist');\ncy.get('canvas').should('exist');\ncy.get('.modal-header > .close > span').click();\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "1d0f8ce5-9515-4d04-87b2-f63839cd5763",
              "parentUUID": "c40d1518-7ae0-47f9-9790-c93a7d64a850",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Viewing the Multi SR report Study",
              "fullTitle": "ECP-T2630-DICOM Structured Report attachments Viewing the Multi SR report Study",
              "timedOut": null,
              "duration": 66425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('ndxMisterMRViewerUrl: ', MultiSR);\ncommon_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.mediumTimeout, true);\ncommon_1.Common.navigateTo('Sharing List');\ncy.get('tr[data-cy=\"examListStudy\"] .patientName').contains('Clinical, Set 066').first().parents('tr').find('.iconBtn.viewExam.confirm-popover-btn').click();\ncy.wait(configFile.mediumTimeout);\ncommon_1.Common.closeOtherTabs();\ncy.visit(\"\".concat(MultiSR));\n//     m.login(customerName,'#Layer_1', `${configFile.url}/${MultiSR}`, true, userName,userpassword, configFile.longTimeout);\n//   //  m.login(customerName,ndxViewer.viewerLogo, `${configFile.url}/${ndxMisterMRViewerUrl}`, false);\n//   c.closeOtherTabs();\n//   cy.visit(`${ndxViewerUrl}`);\ncy.get(ndxViewer.viewerLogo, { timeout: configFile.longTimeout }).should('exist');\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (el) {\n    if (el.find('.popoverBtnGroup > .btn').length > 0) {\n        cy.get('.popoverBtnGroup > .btn').click();\n    }\n});\ncy.wait(configFile.smallTimeout);\ncy.get('#imageThumbnail-1_2_826_0_1_3680043_2_133_1_1_3_13_86_11933-992-1_2_826_0_1_3680043_2_133_1_1_3_13_86_12344-0').should('exist');\ncy.get('#imageThumbnail-1_2_826_0_1_3680043_2_133_1_1_3_13_86_11988-998-1_2_826_0_1_3680043_2_133_1_1_3_13_86_12054-2 > .imageThumbnailOverlay').should('exist');\ncy.get('#imageThumbnail-1_2_826_0_1_3680043_2_133_1_1_3_13_86_11955-999-1_2_826_0_1_3680043_2_133_1_1_3_13_86_12043-1 > .imageThumbnailOverlay').should('exist');\ncy.get('#panelButton').click();\ncy.get('[data-config]').first().click();\ncy.get('#imageThumbnail-1_2_826_0_1_3680043_2_133_1_1_3_13_86_11933-992-1_2_826_0_1_3680043_2_133_1_1_3_13_86_12344-0 > .imageThumbnailOverlay').dblclick();\ncy.get('.imageViewerViewport > .structuredReport .reportTitle').should('exist');\ncy.get('#dicomInfo').click();\ncy.get('li:contains((0040,a491) [CS] Completion Flag: COMPLETE)').should('exist');\ncy.get('li:contains((0040,a493) [CS] Verification Flag: VERIFIED)').should('exist');",
              "err": {},
              "uuid": "f8462a83-8c25-4758-8ec7-82746876bc34",
              "parentUUID": "c40d1518-7ae0-47f9-9790-c93a7d64a850",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Viewing the Empty SR report",
              "fullTitle": "ECP-T2630-DICOM Structured Report attachments Viewing the Empty SR report",
              "timedOut": null,
              "duration": 61044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.mediumTimeout, true);\ncommon_1.Common.navigateTo('Sharing List');\ncy.get('tr[data-cy=\"examListStudy\"] .patientName').contains('JOHN DOE').first().parents('tr').find('.iconBtn.viewExam.confirm-popover-btn').click();\ncy.wait(configFile.mediumTimeout);\ncommon_1.Common.closeOtherTabs();\ncy.visit(\"\".concat(EmptySr));\n//  m.login(customerName,'#Layer_1', `${configFile.url}/${EmptySr}`, true, userName,userpassword, configFile.longTimeout);\n//  m.login(customerName,ndxViewer.viewerLogo, `${configFile.url}/${ndxMisterMRViewerUrl}`, false);\ncy.get(ndxViewer.viewerLogo, { timeout: configFile.longTimeout }).should('exist');\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (el) {\n    if (el.find('.popoverBtnGroup > .btn').length > 0) {\n        cy.get('.popoverBtnGroup > .btn').click();\n    }\n});\ncy.wait(configFile.smallTimeout);\ncy.get('#imageThumbnail-1_3_46_670589_11_7002_7_1582062500000285221702-1-1_2_276_0_7230010_3_1_4_2155604110_4180_1021041295_26-1').should('exist');\ncy.get('#imageThumbnail-1_3_46_670589_11_7002_7_1582062500000285221702-1-1_2_276_0_7230010_3_1_4_2155604110_4180_1021041295_26-1').dblclick();\ncy.get('.imageViewerViewport > .structuredReport .reportTitle').should('exist');\ncy.get('#dicomInfo').click();\ncy.get('li:contains((0040,a491) [CS] Completion Flag: COMPLETE)').should('exist');\ncy.get('li:contains((0040,a493) [CS] Verification Flag: VERIFIED)').should('exist');",
              "err": {},
              "uuid": "55daa81d-ab55-4231-a071-f5a91e4435cb",
              "parentUUID": "c40d1518-7ae0-47f9-9790-c93a7d64a850",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Disable facility and cleanup",
              "fullTitle": "ECP-T2630-DICOM Structured Report attachments Disable facility and cleanup",
              "timedOut": null,
              "duration": 8059,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\nmeteor_1.Meteor.changeFacilityStatus(facilityName, false);",
              "err": {},
              "uuid": "2cc9715a-5b26-4074-957e-08eb6ba2ee8c",
              "parentUUID": "c40d1518-7ae0-47f9-9790-c93a7d64a850",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "529a2f1f-b10b-4f58-8617-ebf31c11f6b9",
            "1d0f8ce5-9515-4d04-87b2-f63839cd5763",
            "f8462a83-8c25-4758-8ec7-82746876bc34",
            "55daa81d-ab55-4231-a071-f5a91e4435cb",
            "2cc9715a-5b26-4074-957e-08eb6ba2ee8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 347603,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome",
        "overwrite": true,
        "reportFilename": "[name]",
        "reportTitle": "SI PACS Automation",
        "reportPageTitle": "SI PACS Automation",
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}