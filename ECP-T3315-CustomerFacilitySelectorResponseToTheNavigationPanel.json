{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-15T03:36:49.261Z",
    "end": "2024-12-15T03:42:05.494Z",
    "duration": 316233,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e371c1b6-6009-4a62-b7ba-415d44565d54",
      "title": "",
      "fullFile": "cypress/e2e/test-suites/ECP-T3315-CustomerFacilitySelectorResponseToTheNavigationPanel.spec.ts",
      "file": "cypress/test-suites/ECP-T3315-CustomerFacilitySelectorResponseToTheNavigationPanel.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "db4b6de6-22dc-485f-bf13-f4fc6aca001e",
          "title": "ECP-T3315 - Customer and Facility Navigation Panel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Step 1 - 12",
              "fullTitle": "ECP-T3315 - Customer and Facility Navigation Panel Step 1 - 12",
              "timedOut": null,
              "duration": 295643,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, EmailID, password);\ncy.wait(configFile.mediumTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(EmailID, password), { timeout: configFile.hugeTimeout });\n        cy.reload();\n    }\n});\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\ncommon_1.Common.navigateTo('Sharing List');\ncy.wait(configFile.tinyTimeout);\nCustomerFacilityNavigationPanel_1.NavigationPanel.VeirfyCustomerFacilityName(customerName, facilityName);\ncommon_1.Common.navigateTo('My Facility');\ncommon_1.Common.navigateTo('Automatic Actions');\ncy.wait(configFile.tinyTimeout);\ncy.get('div > span > .btn', { timeout: configFile.hugeTimeout }).invoke('text').then(function (text2) {\n    var actualname = text2;\n    expect(actualname).contain(customerName);\n});\ncy.get('div:contains(\"' + facilityName + '\")').should('exist');\n// np.VeirfyCustomerFacilityName(Customer1,facility1);\ncommon_1.Common.switchToFacility(facilityName2);\ncommon_1.Common.navigateTo('My Facility');\ncommon_1.Common.navigateTo('Facility Details');\ncy.wait(configFile.tinyTimeout);\nCustomerFacilityNavigationPanel_1.NavigationPanel.VeirfyCustomerFacilityName(customerName, facilityName2);\ncommon_1.Common.navigateTo('My Facility');\ncy.get('body').then(function (el) {\n    if (el.find('#leftNavMenu li a[title=\"Automatic Actions\"]').length > 0) {\n        cy.get('#leftNavMenu li a[title=\"Automatic Actions\"]').should('exist');\n        cy.get('#leftNavMenu li a[title=\"Automatic Actions\"]').click({ force: true });\n        cy.get('p:contains(\"You cannot open this page for the current facility.\")').should('exist');\n        cy.get('p:contains(\"Select another facility to continue.\")').should('exist');\n    }\n    else {\n        cy.get('#leftNavMenu li a[title=\"Automatic Actions\"]').should('not.exist');\n    }\n});\ncy.get('.Select-placeholder').click();\ncy.get('.Select-input input').type(facilityName);\n// const orgDropDown = '.Select-input';\ncy.get('.Select-menu-outer .Select-menu .needsclick').first().click({ force: true });\ncy.wait(configFile.smallTimeout);\ncy.get('#selectFacilityBtn').click();\nCustomerFacilityNavigationPanel_1.NavigationPanel.VeirfyCustomerFacilityName(customerName, facilityName);\ncommon_1.Common.switchToFacility(facility3Name);\ncommon_1.Common.navigateTo('Dashboard');\ncy.wait(configFile.tinyTimeout);\nCustomerFacilityNavigationPanel_1.NavigationPanel.VeirfyCustomerFacilityName(customerName, facility3Name);\ncommon_1.Common.switchToFacility(facilityName);\ncy.reload();\ncommon_1.Common.navigateTo('Worklist');\ncy.get('#worklist-tabs-tab-WL').should('exist');\nCustomerFacilityNavigationPanel_1.NavigationPanel.VeirfyCustomerNameonly(customerName, facilityName);\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.switchToCustomer(customer2Name);\ncommon_1.Common.navigateTo('My Organization');\ncommon_1.Common.navigateTo('Facilities');\ncy.wait(configFile.tinyTimeout);\ncy.get('.action-cell > .btn').first().click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.js-status-btn').uncheck();\ncy.get('.pull-right > .btn-primary').click();\ncy.wait(configFile.tinyTimeout);\ncommon_1.Common.switchToCustomer(customer2Name);\ncommon_1.Common.navigateTo('My Organization');\ncommon_1.Common.navigateTo('Facilities');\ncy.wait(configFile.tinyTimeout);\ncy.get(':nth-child(2) > .rt-tr > .action-cell > .btn').click();\ncy.wait(configFile.tinyTimeout);\ncy.get('.js-status-btn').uncheck();\ncy.wait(configFile.tinyTimeout);\ncy.get('.pull-right > .btn-primary').click();\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.switchToCustomer(customer2Name);\ncy.get(\"#leftNavMenu li a[title=\\\"Dashboard\\\"]\", { timeout: configFile.hugeTimeout }).should('not.exist');\ncy.get(\"#leftNavMenu li a[title=\\\"Sharing List\\\"]\", { timeout: configFile.hugeTimeout }).should('not.exist');\ncy.get(\"#leftNavMenu li a[title=\\\"My Facility\\\"]\", { timeout: configFile.hugeTimeout }).should('not.exist');\ncy.get(\"#leftNavMenu li a[title=\\\"My Organization\\\"]\", { timeout: configFile.hugeTimeout }).should('exist');",
              "err": {},
              "uuid": "9b8a8d4b-784c-4fac-bfd3-8a218bdf1797",
              "parentUUID": "db4b6de6-22dc-485f-bf13-f4fc6aca001e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Post step - Cleanup",
              "fullTitle": "ECP-T3315 - Customer and Facility Navigation Panel Post step - Cleanup",
              "timedOut": null,
              "duration": 8944,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\nmeteor_1.Meteor.changeFacilityStatus(facilityName, false);\nmeteor_1.Meteor.changeFacilityStatus(facilityName2, false);\nmeteor_1.Meteor.changeFacilityStatus(facility3Name, false);",
              "err": {},
              "uuid": "de46db0a-d46b-4652-a6ca-2430847b49c0",
              "parentUUID": "db4b6de6-22dc-485f-bf13-f4fc6aca001e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b8a8d4b-784c-4fac-bfd3-8a218bdf1797",
            "de46db0a-d46b-4652-a6ca-2430847b49c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 304587,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome",
        "overwrite": true,
        "reportFilename": "[name]",
        "reportTitle": "SI PACS Automation",
        "reportPageTitle": "SI PACS Automation",
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}