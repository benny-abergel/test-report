{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-15T02:49:20.235Z",
    "end": "2024-12-15T02:54:34.568Z",
    "duration": 314333,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9536759f-d2b4-43a2-bdc3-e7d69437d3cd",
      "title": "",
      "fullFile": "cypress/e2e/test-suites/ECP-T3450-Delete-Exams-and-Procedures.spec.ts",
      "file": "cypress/test-suites/ECP-T3450-Delete-Exams-and-Procedures.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7eb6631a-0c7f-492a-a08c-ab9ea8780fac",
          "title": "ECP-T3450 - Delete Exams and Procedures",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "ECP-T3450 - data prep",
              "fullTitle": "ECP-T3450 - Delete Exams and Procedures ECP-T3450 - data prep",
              "timedOut": null,
              "duration": 113881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\ncy.reload();\ncommon_1.Common.navigateTo('Sharing List');\ncy.waitUntil(function () { return cy.get('.pageTitle').should('be.visible'); }, { timeout: configFile.hugeTimeout });\nmeteor_1.Meteor.changeFeatures({\n    allowAPIs: true,\n    allowHl7: true,\n    allowWorklist: true\n}, facilityName);\ncy.reload();\ncommon_1.Common.createAPIToken(\"api_token_for_org_\".concat(facilityName)).then(function (res) {\n    var _a = res.token, token = _a === void 0 ? '' : _a;\n    var _b = res.orgId, orgId = _b === void 0 ? '' : _b;\n    var header = {\n        Authorization: \"Bearer \".concat(token),\n        Accept: 'application/json; charset=utf-8',\n        'Content-Type': 'application/json; charset=utf-8'\n    };\n    resources.forEach(function (file) {\n        uploadStudy(\"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=resources/\").concat(file, \" -keepAlive=1\"));\n    });\n    var mrn = \"mrn_cypress_\".concat(date);\n    for (var i = date; i < (date + 400); i = i + 100) {\n        uploadProcedure(header, \"\".concat(i), \"p-\".concat(i, \"^mrn_cypress_\").concat(i, \"^\").concat(i, \"^Mr\"));\n    }\n    common_1.Common.navigateTo('Worklist');\n    cy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\n    cy.get(':nth-child(2)').then(function (el) {\n        if (el.find('> .chips-layout > button').length > 0) {\n            cy.get(':nth-child(2) > .chips-layout > button').first().click();\n            cy.get('[data-cy=updateViewBtn]').click({ force: true });\n        }\n    });\n    filterBy(FILTERS_DROPDOWN.facility, facilityName, FILTERS_VALUES.facility);\n    cy.waitUntil(function () { return cy.get('[data-cy=\"patientMrn-cell\"][title=\"a-01\"]').first().should('be.visible'); }, { timeout: configFile.hugeTimeout });\n    cy.get('[data-cy=\"patientMrn-cell\"][title=\"a-01\"]').first().rightclick();\n    cy.get('[data-cy=\"hipaaLog\"]').click();\n    cy.get('button:contains(\"Worklist Added\")').first().click();\n    cy.wait(configFile.smallTimeout);\n    cy.get('.hipaa-event-details-basic-table').find('td').eq(1).invoke('text').then(function (text) {\n        var wlID = text;\n        cy.log(wlID);\n        cy.get('.hipaa-log-title.modal-title').find('.close').click();\n        cy.get('[data-cy=\"patientMrn-cell\"][title=\"' + mrn + '\"]').first().rightclick();\n        cy.get('[data-cy=\"hipaaLog\"]').click();\n        cy.get('button:contains(\"Worklist Added\")').first().click();\n        cy.wait(configFile.smallTimeout);\n        cy.get('.hipaa-event-details-basic-table').find('td').eq(1).invoke('text').then(function (text1) {\n            var prID = text1;\n            cy.log(prID);\n            cy.wrap(meteor_1.Meteor.matchStudyToProc(orgId, wlID, prID), { timeout: configFile.hugeTimeout });\n        });\n    });\n    cy.wait(configFile.smallTimeout);\n}).catch(function (err) {\n    console.log(err);\n});",
              "err": {},
              "uuid": "905c69c9-b890-490b-95ab-34c2cb971074",
              "parentUUID": "7eb6631a-0c7f-492a-a08c-ab9ea8780fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step 1-3: Select a match Exam to delete and confirm single Exam deletion",
              "fullTitle": "ECP-T3450 - Delete Exams and Procedures Step 1-3: Select a match Exam to delete and confirm single Exam deletion",
              "timedOut": null,
              "duration": 38009,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\nfilterBy(FILTERS_DROPDOWN.facility, facilityName, FILTERS_VALUES.facility);\ncy.wait(configFile.smallTimeout);\nfilterBy(FILTERS_DROPDOWN.matchStatus, FILTERS_VALUES.matchStatus, FILTERS_VALUES.matchStatus);\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\ncy.get('.rt-body-worklist.rt-tbody').children().should('have.length', 1);\ncy.get('[data-cy=worklistTableBody] [data-cy=\"patientMrn-cell\"]').first().scrollIntoView({ easing: 'linear' });\ncy.get('[data-cy=worklistTableBody] [data-cy=\"patientMrn-cell\"]').first().rightclick();\nopenDeleteMenuForItem(ASCTIONS.confirm);\ncy.wait(configFile.smallTimeout);\ncy.get('.rt-body-worklist.rt-tbody').children().should('have.length', 0);",
              "err": {},
              "uuid": "9cb115d3-93cc-4e1f-a745-e268bd93aab8",
              "parentUUID": "7eb6631a-0c7f-492a-a08c-ab9ea8780fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step 4: Select a single Exam to delete and cancel single Exam deletion",
              "fullTitle": "ECP-T3450 - Delete Exams and Procedures Step 4: Select a single Exam to delete and cancel single Exam deletion",
              "timedOut": null,
              "duration": 24968,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\nfilterBy(FILTERS_DROPDOWN.facility, facilityName, FILTERS_VALUES.facility);\ncy.wait(configFile.smallTimeout);\ncy.get('.rt-body-worklist.rt-tbody').children().should('have.length.gte', 0).its('length').then(function (examCount) {\n    cy.get('[data-cy=worklistTableBody] [data-cy=\"patientMrn-cell\"]').first().rightclick();\n    openDeleteMenuForItem(ASCTIONS.cancel);\n    cy.wait(configFile.smallTimeout);\n    cy.get('.rt-body-worklist.rt-tbody').children().should('have.length', examCount);\n});",
              "err": {},
              "uuid": "226fffb6-c850-42d1-b9b7-57fedbad4ba3",
              "parentUUID": "7eb6631a-0c7f-492a-a08c-ab9ea8780fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step 5 - 6: Select an Unread Exam to delete and confirm single Unread Exam deletion",
              "fullTitle": "ECP-T3450 - Delete Exams and Procedures Step 5 - 6: Select an Unread Exam to delete and confirm single Unread Exam deletion",
              "timedOut": null,
              "duration": 32425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\nfilterBy(FILTERS_DROPDOWN.facility, facilityName, FILTERS_VALUES.facility);\ncy.wait(configFile.smallTimeout);\nfilterBy(FILTERS_DROPDOWN.readStatus, FILTERS_VALUES.unreadStatus, FILTERS_VALUES.unreadStatus);\ncy.wait(configFile.smallTimeout);\nfilterBy(FILTERS_DROPDOWN.matchStatus, FILTERS_VALUES.unmatchedStudies, FILTERS_VALUES.unmatchedStudies);\ncy.wait(configFile.smallTimeout);\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\ncy.get('.-loading').should('not.exist');\ncy.get('.rt-body-worklist.rt-tbody').children().should('have.length.gte', 0).its('length').then(function (examCount) {\n    cy.get('[data-cy=worklistTableBody] [data-cy=\"patientMrn-cell\"]').first().scrollIntoView({ easing: 'linear' });\n    cy.get('[data-cy=worklistTableBody] [data-cy=\"patientMrn-cell\"]').first().rightclick();\n    openDeleteMenuForItem(ASCTIONS.confirm);\n    cy.wait(configFile.smallTimeout);\n    cy.get('.rt-body-worklist.rt-tbody').children().should('have.length', examCount - 1);\n});",
              "err": {},
              "uuid": "80094c3c-add5-40f5-87e9-9d96b0ab7102",
              "parentUUID": "7eb6631a-0c7f-492a-a08c-ab9ea8780fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step 7 - Cancel single Unread Exam deletion",
              "fullTitle": "ECP-T3450 - Delete Exams and Procedures Step 7 - Cancel single Unread Exam deletion",
              "timedOut": null,
              "duration": 28374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\nfilterBy(FILTERS_DROPDOWN.facility, facilityName, FILTERS_VALUES.facility);\ncy.wait(configFile.smallTimeout);\nfilterBy(FILTERS_DROPDOWN.readStatus, FILTERS_VALUES.unreadStatus, FILTERS_VALUES.unreadStatus);\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\ncy.wait(configFile.smallTimeout);\ncy.get('.-loading').should('not.exist');\ncy.get('.rt-body-worklist.rt-tbody').children().should('have.length.gte', 0).its('length').then(function (examCount) {\n    cy.get('[data-cy=worklistTableBody] [data-cy=\"patientMrn-cell\"]').first().rightclick();\n    openDeleteMenuForItem(ASCTIONS.cancel);\n    cy.wait(configFile.smallTimeout);\n    cy.get('.rt-body-worklist.rt-tbody').children().should('have.length', examCount);\n});",
              "err": {},
              "uuid": "c588e1d0-a553-409b-9904-8caae549c16a",
              "parentUUID": "7eb6631a-0c7f-492a-a08c-ab9ea8780fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step 8-9 , 11-12 Batch selection of Exams for deletion and confirm batch deletion of Exams, including Unread",
              "fullTitle": "ECP-T3450 - Delete Exams and Procedures Step 8-9 , 11-12 Batch selection of Exams for deletion and confirm batch deletion of Exams, including Unread",
              "timedOut": null,
              "duration": 27949,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\nfilterBy(FILTERS_DROPDOWN.facility, facilityName, FILTERS_VALUES.facility);\ncy.wait(configFile.smallTimeout);\nfilterBy(FILTERS_DROPDOWN.matchStatus, FILTERS_VALUES.unmatchedProcedures, FILTERS_VALUES.unmatchedProcedures);\ncy.wait(configFile.smallTimeout);\ncy.get('.rt-body-worklist.rt-tbody').children().should('have.length.gte', 2).its('length').then(function (examCount) {\n    cy.get('[data-cy=worklistTableBody] [data-cy=\"patientMrn-cell\"]').first().scrollIntoView({ easing: 'linear' });\n    cy.get('[data-cy=worklistTableBody] [data-cy=\"patientMrn-cell\"]').first().rightclick();\n    cy.get('#grid-context-menu [data-cy=\"workflowAdministration\"]').click();\n    cy.get('#grid-context-menu [data-cy=\"deleteReport\"]').click();\n    cy.get('.reactTooltip-content .popover-btn-group .btn-danger').click();\n    cy.wait(configFile.smallTimeout);\n    cy.get('.rt-body-worklist.rt-tbody').children().should('have.length', examCount - 1);\n});",
              "err": {},
              "uuid": "80f7b54e-2aa6-407f-9b41-3fe1a2d95273",
              "parentUUID": "7eb6631a-0c7f-492a-a08c-ab9ea8780fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Step 10, 13 Batch selection of Exams for deletion and cancel batch deletion of Exams, including Unread",
              "fullTitle": "ECP-T3450 - Delete Exams and Procedures Step 10, 13 Batch selection of Exams for deletion and cancel batch deletion of Exams, including Unread",
              "timedOut": null,
              "duration": 24563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\nfilterBy(FILTERS_DROPDOWN.facility, facilityName, FILTERS_VALUES.facility);\ncy.wait(configFile.smallTimeout);\ncy.get('.rt-body-worklist.rt-tbody').children().should('have.length.gte', 2).its('length').then(function (examCount) {\n    cy.get('[data-cy=worklistTableBody] [data-cy=\"patientMrn-cell\"]').last().scrollIntoView({ easing: 'linear' });\n    cy.get('[data-cy=worklistTableBody] [data-cy=\"patientMrn-cell\"]').last().rightclick();\n    cy.get('#grid-context-menu [data-cy=\"workflowAdministration\"]').click();\n    cy.get('#grid-context-menu [data-cy=\"deleteStudy\"] .react-contextmenu-item').then(function ($option) {\n        if ($option.hasClass('react-contextmenu-item--disabled')) {\n            cy.get('#grid-context-menu span[data-cy=\"deleteReport\"]').click();\n        }\n        else {\n            cy.get('#grid-context-menu [data-cy=\"deleteStudy\"]').click();\n        }\n    });\n    cy.get('.reactTooltip-content .popover-btn-group .btn-default').click();\n    cy.wait(configFile.smallTimeout);\n    cy.get('.rt-body-worklist.rt-tbody').children().should('have.length', examCount);\n});",
              "err": {},
              "uuid": "e387802f-bbc6-4e7d-943f-4ba707610ff8",
              "parentUUID": "7eb6631a-0c7f-492a-a08c-ab9ea8780fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Disable facility and cleanup",
              "fullTitle": "ECP-T3450 - Delete Exams and Procedures Disable facility and cleanup",
              "timedOut": null,
              "duration": 6938,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\nmeteor_1.Meteor.changeFacilityStatus(facilityName, false);",
              "err": {},
              "uuid": "5c9575a6-63c9-407d-a72c-10e30db6ccaa",
              "parentUUID": "7eb6631a-0c7f-492a-a08c-ab9ea8780fac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "905c69c9-b890-490b-95ab-34c2cb971074",
            "9cb115d3-93cc-4e1f-a745-e268bd93aab8",
            "226fffb6-c850-42d1-b9b7-57fedbad4ba3",
            "80094c3c-add5-40f5-87e9-9d96b0ab7102",
            "c588e1d0-a553-409b-9904-8caae549c16a",
            "80f7b54e-2aa6-407f-9b41-3fe1a2d95273",
            "e387802f-bbc6-4e7d-943f-4ba707610ff8",
            "5c9575a6-63c9-407d-a72c-10e30db6ccaa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 297107,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome",
        "overwrite": true,
        "reportFilename": "[name]",
        "reportTitle": "SI PACS Automation",
        "reportPageTitle": "SI PACS Automation",
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}