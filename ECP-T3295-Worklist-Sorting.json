{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-15T03:42:25.610Z",
    "end": "2024-12-15T03:52:36.882Z",
    "duration": 611272,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "67f59851-ecfa-4f19-8b01-0ed8fa64a2e9",
      "title": "",
      "fullFile": "cypress/e2e/test-suites/ECP-T3295-Worklist-Sorting.spec.ts",
      "file": "cypress/test-suites/ECP-T3295-Worklist-Sorting.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6c802956-3b39-477f-aa1e-85e0dbc3a482",
          "title": "ECP-T3295 - User wants to view sorting applied on the worklist",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "ECP-T3295 - Steps 1 - 12 (Admin)",
              "fullTitle": "ECP-T3295 - User wants to view sorting applied on the worklist ECP-T3295 - Steps 1 - 12 (Admin)",
              "timedOut": null,
              "duration": 312799,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1 - User logins and navigates to 'Worklist table' (Call Test)\n// const attempt = cy.state('runnable')._currentRetry;\n//cy.log(attempt);\nvar viewName = \"view-automation-\".concat(date);\nvar viewName2 = \"view-automation-\".concat(date, \"-2\");\ncy.wrap(viewName).as('viewName');\ncy.wrap(viewName2).as('viewName2');\ncommon_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\ncommon_1.Common.navigateTo('Worklist');\ndeleteAllViews();\nshowAllColumns();\n// Step 2 - Create view1 without any sort\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncy.get('button:contains(\"Clear All\")').last().click();\ncy.get('button[data-cy=\"saveNewViewBtn\"]').click();\ncy.get('#view-name').should('exist');\ncy.get('#view-name').type(viewName);\ncy.get('button[data-cy=\"confirmNewViewBtn\"]').click();\ncy.get(\"[data-cy=\\\"filterViewItem-\".concat(viewName, \"\\\"]\")).should('exist');\ncy.get(\"[data-cy=\\\"filterViewItem-\".concat(viewName, \"\\\"]\")).should('contain.text', viewName);\n// Step 3 & 4 - Perform ASC & DESC sort for specific field\n// the test should be done to every field exist in WL that  are mentioned in the Details Tab   > Preconditions section\n// PRIORITY,PATIENT,MRN,EXAM DATE,MOD,EXAM DESCRIPTION,BODY PART,GENDER,DOB,AGE,ACCESSION,IMAGES,FACILITY,INDICATORS,READ STATUS,ASSIGNEE,LOCK STATUS,LOCKED BY,REFFERING,PROC. STATUS,RECEIVED,CODE,SOURCE,MATCH STATUS,SOURCE,MATCH STATUS\n// Priority\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\n// Patient\ncy.get('#patientName div[data-cy=\"patientColumn\"]').first().click();\ncheckSorting('#patientName div[data-cy=\"patientColumn\"]', '[data-cy=sortChip_patientName] > .chip-box', 'Patient: DESC', 'Patient: ASC');\ncy.get('#patientName div[data-cy=\"patientColumn\"]').first().click();\ncheckSorting('#patientName div[data-cy=\"patientColumn\"]', '[data-cy=sortChip_patientName] > .chip-box', 'Patient: DESC', 'Patient: ASC');\n// MRN\ncy.get('[data-cy=\"mRNColumn\"]').first().click();\ncheckSorting('[data-cy=\"mRNColumn\"]', '[data-cy=sortChip_patientMrn] > .chip-box', 'MRN: DESC', 'MRN: ASC');\ncy.get('[data-cy=\"mRNColumn\"]').first().click();\ncheckSorting('[data-cy=\"mRNColumn\"]', '[data-cy=sortChip_patientMrn] > .chip-box', 'MRN: DESC', 'MRN: ASC');\n// modalitiesString\ncy.get('#modalitiesString div[data-cy=\"modColumn\"]').first().click();\ncheckSorting('#modalitiesString div[data-cy=\"modColumn\"]', '[data-cy=sortChip_modalitiesString] > .chip-box', 'Modality: DESC', 'Modality: ASC');\ncy.get('#modalitiesString div[data-cy=\"modColumn\"]').first().click();\ncheckSorting('#modalitiesString div[data-cy=\"modColumn\"]', '[data-cy=sortChip_modalitiesString] > .chip-box', 'Modality: DESC', 'Modality: ASC');\n// examDescription\ncy.get('#examDescription div[data-cy=\"examDescriptionColumn\"]').eq(0).click();\ncheckSorting('#examDescription div[data-cy=\"examDescriptionColumn\"]', '[data-cy=sortChip_examDescription] > .chip-box', 'Exam Desc.: DESC', 'Exam Desc.: ASC');\ncy.get('#examDescription div[data-cy=\"examDescriptionColumn\"]').eq(0).click();\ncheckSorting('#examDescription div[data-cy=\"examDescriptionColumn\"]', '[data-cy=sortChip_examDescription] > .chip-box', 'Exam Desc.: DESC', 'Exam Desc.: ASC');\n// bodyPartExamined\ncy.get('#bodyPartExamined div[data-cy=\"bodyPartColumn\"]').first().click();\ncheckSorting('#bodyPartExamined div[data-cy=\"bodyPartColumn\"]', '[data-cy=sortChip_bodyPartExamined] > .chip-box', 'Body Part: DESC', 'Body Part: ASC');\ncy.get('#bodyPartExamined div[data-cy=\"bodyPartColumn\"]').first().click();\ncheckSorting('#bodyPartExamined div[data-cy=\"bodyPartColumn\"]', '[data-cy=sortChip_bodyPartExamined] > .chip-box', 'Body Part: DESC', 'Body Part: ASC');\n// patientGender\ncy.get('#patientGender div[data-cy=\"genderColumn\"]').first().click();\ncheckSorting('#patientGender div[data-cy=\"genderColumn\"]', '[data-cy=sortChip_patientGender] > .chip-box', 'Gender: DESC', 'Gender: ASC');\ncy.get('#patientGender div[data-cy=\"genderColumn\"]').first().click();\ncheckSorting('#patientGender div[data-cy=\"genderColumn\"]', '[data-cy=sortChip_patientGender] > .chip-box', 'Gender: DESC', 'Gender: ASC');\n// accessionNumber\ncy.get('#accessionNumber div[data-cy=\"accessionColumn\"]').first().click();\ncheckSorting('#accessionNumber div[data-cy=\"accessionColumn\"]', '[data-cy=sortChip_accessionNumber] > .chip-box', 'Accession: DESC', 'Accession: ASC');\ncy.get('#accessionNumber div[data-cy=\"accessionColumn\"]').first().click();\ncheckSorting('#accessionNumber div[data-cy=\"accessionColumn\"]', '[data-cy=sortChip_accessionNumber] > .chip-box', 'Accession: DESC', 'Accession: ASC');\n// imageCount\ncy.get('#imageCount div[data-cy=\"imagesColumn\"]').first().click();\ncheckSorting('#imageCount div[data-cy=\"imagesColumn\"]', '[data-cy=sortChip_imageCount] > .chip-box', 'No. of Images: DESC', 'No. of Images: ASC');\ncy.get('#imageCount div[data-cy=\"imagesColumn\"]').first().click();\ncheckSorting('#imageCount div[data-cy=\"imagesColumn\"]', '[data-cy=sortChip_imageCount] > .chip-box', 'No. of Images: DESC', 'No. of Images: ASC');\n// organizationId - facility id\ncy.get('#organizationId div[data-cy=\"facilityColumn\"]').first().click();\ncheckSorting('#organizationId div[data-cy=\"facilityColumn\"]', '[data-cy=sortChip_organizationId] > .chip-box', 'Facility: DESC', 'Facility: ASC');\ncy.get('#organizationId div[data-cy=\"facilityColumn\"]').first().click();\ncheckSorting('#organizationId div[data-cy=\"facilityColumn\"]', '[data-cy=sortChip_organizationId] > .chip-box', 'Facility: DESC', 'Facility: ASC');\n// examReason\ncy.get('#examReason div[data-cy=\"indicationsColumn\"]').first().click();\ncheckSorting('#examReason div[data-cy=\"indicationsColumn\"]', '[data-cy=sortChip_examReason] > .chip-box', 'Indications: DESC', 'Indications: ASC');\ncy.get('#examReason div[data-cy=\"indicationsColumn\"]').first().click();\ncheckSorting('#examReason div[data-cy=\"indicationsColumn\"]', '[data-cy=sortChip_examReason] > .chip-box', 'Indications: DESC', 'Indications: ASC');\n// readStatus\ncy.get('#readStatus div[data-cy=\"readStatusColumn\"]').first().click();\ncheckSorting('#readStatus div[data-cy=\"readStatusColumn\"]', '[data-cy=sortChip_readStatus] > .chip-box', 'Read Status: DESC', 'Read Status: ASC');\ncy.get('#readStatus div[data-cy=\"readStatusColumn\"]').first().click();\ncheckSorting('#readStatus div[data-cy=\"readStatusColumn\"]', '[data-cy=sortChip_readStatus] > .chip-box', 'Read Status: DESC', 'Read Status: ASC');\n// assignedName\ncy.get('#assignedName div[data-cy=\"assigneeColumn\"]').eq(0).click();\ncheckSorting('#assignedName div[data-cy=\"assigneeColumn\"]', '[data-cy=sortChip_assignedName] > .chip-box', 'Assignee: DESC', 'Assignee: ASC');\ncy.get('#assignedName div[data-cy=\"assigneeColumn\"]').eq(0).click();\ncheckSorting('#assignedName div[data-cy=\"assigneeColumn\"]', '[data-cy=sortChip_assignedName] > .chip-box', 'Assignee: DESC', 'Assignee: ASC');\n// lockStatus\ncy.get('#lockStatus div[data-cy=\"lockStatusColumn\"]').eq(0).click();\ncheckSorting('#lockStatus div[data-cy=\"lockStatusColumn\"]', '[data-cy=sortChip_lockStatus] > .chip-box', 'Lock Status: DESC', 'Lock Status: ASC');\ncy.get('#lockStatus div[data-cy=\"lockStatusColumn\"]').eq(0).click();\ncheckSorting('#lockStatus div[data-cy=\"lockStatusColumn\"]', '[data-cy=sortChip_lockStatus] > .chip-box', 'Lock Status: DESC', 'Lock Status: ASC');\n// lockedBy\ncy.get('#lockedBy div[data-cy=\"lockedByColumn\"]').eq(0).click();\ncheckSorting('#lockedBy div[data-cy=\"lockedByColumn\"]', '[data-cy=sortChip_lockedBy] > .chip-box', 'Locked By: DESC', 'Locked By: ASC');\ncy.get('#lockedBy div[data-cy=\"lockedByColumn\"]').eq(0).click();\ncheckSorting('#lockedBy div[data-cy=\"lockedByColumn\"]', '[data-cy=sortChip_lockedBy] > .chip-box', 'Locked By: DESC', 'Locked By: ASC');\n// referringPhysicianName\ncy.get('#referringPhysicianName div[data-cy=\"referringColumn\"]').first().click();\ncheckSorting('#referringPhysicianName div[data-cy=\"referringColumn\"]', '[data-cy=sortChip_referringPhysicianName] > .chip-box', 'Referring: DESC', 'Referring: ASC');\ncy.get('#referringPhysicianName div[data-cy=\"referringColumn\"]').first().click();\ncheckSorting('#referringPhysicianName div[data-cy=\"referringColumn\"]', '[data-cy=sortChip_referringPhysicianName] > .chip-box', 'Referring: DESC', 'Referring: ASC');\n// procedureStatus\ncy.get('#procedureStatus div[data-cy=\"examStatusColumn\"]').click();\ncheckSorting('div[data-cy=\"examStatusColumn\"]', '[data-cy=sortChip_procedureStatus] > .chip-box', 'Exam Status: DESC', 'Exam Status: ASC');\ncy.get('#procedureStatus div[data-cy=\"examStatusColumn\"]').click();\ncheckSorting('div[data-cy=\"examStatusColumn\"]', '[data-cy=sortChip_procedureStatus] > .chip-box', 'Exam Status: DESC', 'Exam Status: ASC');\n// procedureCode\ncy.get('#procedureCode div[data-cy=\"codeColumn\"]').eq(0).click();\ncheckSorting('#procedureCode div[data-cy=\"codeColumn\"]', '[data-cy=sortChip_procedureCode] > .chip-box', 'Code: DESC', 'Code: ASC');\ncy.get('#procedureCode div[data-cy=\"codeColumn\"]').eq(0).click();\ncheckSorting('#procedureCode div[data-cy=\"codeColumn\"]', '[data-cy=sortChip_procedureCode] > .chip-box', 'Code: DESC', 'Code: ASC');\n// source\ncy.get('#source div[data-cy=\"sourceColumn\"]').eq(0).click();\ncheckSorting('#source div[data-cy=\"sourceColumn\"]', '[data-cy=sortChip_source] > .chip-box', 'Source: DESC', 'Source: ASC');\ncy.get('#source div[data-cy=\"sourceColumn\"]').eq(0).click();\ncheckSorting('#source div[data-cy=\"sourceColumn\"]', '[data-cy=sortChip_source] > .chip-box', 'Source: DESC', 'Source: ASC');\n// matchStatus\ncy.get('#matchStatus div[data-cy=\"matchStatusColumn\"]').eq(0).click();\ncheckSorting('#matchStatus div[data-cy=\"matchStatusColumn\"]', '[data-cy=sortChip_matchStatus] > .chip-box', 'Match Status: DESC', 'Match Status: ASC');\ncy.get('#matchStatus div[data-cy=\"matchStatusColumn\"]').eq(0).click();\ncheckSorting('#matchStatus div[data-cy=\"matchStatusColumn\"]', '[data-cy=sortChip_matchStatus] > .chip-box', 'Match Status: DESC', 'Match Status: ASC');\n// unmatchedReason\ncy.get('#unmatchedReason div[data-cy=\"unmatchedReasonColumn\"]').eq(0).click();\ncheckSorting('#unmatchedReason div[data-cy=\"unmatchedReasonColumn\"]', '[data-cy=sortChip_unmatchedReason] > .chip-box', 'Unmatched Reason: DESC', 'Unmatched Reason: ASC');\ncy.get('#unmatchedReason div[data-cy=\"unmatchedReasonColumn\"]').eq(0).click();\ncheckSorting('#unmatchedReason div[data-cy=\"unmatchedReasonColumn\"]', '[data-cy=sortChip_unmatchedReason] > .chip-box', 'Unmatched Reason: DESC', 'Unmatched Reason: ASC');\n// Step 5 & 6 - Perform sort for Dates fields // TODO - incorrect - low or high, showing oldest & newest\n// Ascending order is from \"Oldest to Newest\" & Descending order is from \"Newest to Oldest\"\n// examDateTime\ncy.get('#examDateTime div[data-cy=\"examDateColumn\"]').first().click();\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\ncy.get('#examDateTime div[data-cy=\"examDateColumn\"]').first().click();\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\n// patientBirthDate\ncy.get('#patientBirthDate div[data-cy=\"dOBColumn\"]').first().click();\ncheckSorting('#patientBirthDate div[data-cy=\"dOBColumn\"]', '[data-cy=sortChip_patientBirthDate] > .chip-box', 'DOB: Youngest to Oldest', 'DOB: Oldest to Youngest');\ncy.get('#patientBirthDate div[data-cy=\"dOBColumn\"]').first().click();\ncheckSorting('#patientBirthDate div[data-cy=\"dOBColumn\"]', '[data-cy=sortChip_patientBirthDate] > .chip-box', 'DOB: Youngest to Oldest', 'DOB: Oldest to Youngest');\n// patientAge\ncy.get('#patientAge div[data-cy=\"ageColumn\"]').first().click();\ncheckSorting('#patientAge div[data-cy=\"ageColumn\"]', '[data-cy=sortChip_patientAge] > .chip-box', 'Age: Oldest to Youngest', 'Age: Youngest to Oldest');\ncy.get('#patientAge div[data-cy=\"ageColumn\"]').first().click();\ncheckSorting('#patientAge div[data-cy=\"ageColumn\"]', '[data-cy=sortChip_patientAge] > .chip-box', 'Age: Oldest to Youngest', 'Age: Youngest to Oldest');\n// receivedDateTime\ncy.get('#receivedDateTime div[data-cy=\"receivedColumn\"]').eq(0).click();\ncheckSorting('#receivedDateTime div[data-cy=\"receivedColumn\"]', '[data-cy=sortChip_receivedDateTime] > .chip-box', 'Received: Newest to Oldest', 'Received: Oldest to Newest');\ncy.get('#receivedDateTime div[data-cy=\"receivedColumn\"]').eq(0).click();\ncheckSorting('#receivedDateTime div[data-cy=\"receivedColumn\"]', '[data-cy=sortChip_receivedDateTime] > .chip-box', 'Received: Newest to Oldest', 'Received: Oldest to Newest');\ncy.get('button:contains(\"Clear All\")').last().click();\n// Step 7 - Sort Priority column\n// Priority\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\n// Step 8 - Press again on Priority column\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\n// Step 9 - Perform refresh after adding filter criteria item\ncy.get('input[data-cy=\"patientMrnFilter\"]').type('{selectall}cypress');\ncy.get('input[data-cy=\"patientMrnFilter\"]').should('have.value', 'cypress');\ncy.reload();\ncy.get('input[data-cy=\"patientMrnFilter\"]').should('have.length', 0);\n// Step 10 - clear sorting by clicking on X of the sort criteria.\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncy.get('.chips-container div[data-cy=\"sortChip_mappedPriority\"] .close').click();\ncy.get('.chips-container div[data-cy=\"sortChip_mappedPriority\"]').should('not.exist');\n// Step 10.3 - All the above should be immediate, with no delay with the exception of refresh operation itself. TODO - cannot test with cypress\n// Step 11 - when there is some sort on field go to another view back and forward\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncy.get('button[data-cy=\"saveNewViewBtn\"]').click();\ncy.get('#view-name').should('exist');\ncy.get('#view-name').type(viewName2);\ncy.get('button[data-cy=\"confirmNewViewBtn\"]').click();\ncy.get(\"[data-cy=\\\"filterViewItem-\".concat(viewName2, \"\\\"]\")).should('exist');\ncy.get(\"[data-cy=\\\"filterViewItem-\".concat(viewName2, \"\\\"]\")).should('contain.text', viewName2);\ncy.wait(configFile.tinyTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.btn-group-actions > .btn-default').length > 0) {\n        cy.get('.btn-group-actions > .btn-default').click();\n    }\n});\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\ncy.get(\"li[data-cy=\\\"filterViewItem-\".concat(viewName, \"\\\"]\")).click();\ncy.get('[data-cy=\"mRNColumn\"]').first().click();\ncheckSorting('[data-cy=\"mRNColumn\"]', '[data-cy=sortChip_patientMrn] > .chip-box', 'MRN: DESC', 'MRN: ASC');\ncy.get(\"li[data-cy=\\\"filterViewItem-\".concat(viewName, \"\\\"]\")).click();\ncy.get('body').then(function (elx) {\n    if (elx.find('.btn-group-actions > .btn-default').length > 0) {\n        cy.get('.btn-group-actions > .btn-default').click();\n    }\n});\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\n// Step 12 - delete sort criteria and perform refresh\ncy.get('.chips-container div[data-cy=\"sortChip_mappedPriority\"] .close').click();\ncy.get('.chips-container div[data-cy=\"sortChip_mappedPriority\"]').should('not.exist');\ncy.reload();\ncy.get('.chips-container div[data-cy=\"sortChip_mappedPriority\"]').should('not.exist');",
              "err": {},
              "uuid": "4659205f-35d5-4888-8b1b-79e82b34aa27",
              "parentUUID": "6c802956-3b39-477f-aa1e-85e0dbc3a482",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ECP-T3295 - Steps 13(Interpreting Provider)",
              "fullTitle": "ECP-T3295 - User wants to view sorting applied on the worklist ECP-T3295 - Steps 13(Interpreting Provider)",
              "timedOut": null,
              "duration": 230172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1 - User logins and navigates to 'Worklist table' (Call Test)\nvar viewName = \"view-automation-\".concat(date);\nvar viewName2 = \"view-automation-\".concat(date, \"-2\");\ncy.wrap(viewName).as('viewName');\ncy.wrap(viewName2).as('viewName2');\ncommon_1.Common.login(customerName, restrictedUserName, restrictedUserPassword);\ncy.wait(configFile.mediumTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(restrictedUserName, restrictedUserPassword), { timeout: configFile.hugeTimeout });\n        cy.reload();\n    }\n});\ncy.wait(configFile.smallTimeout);\ndeleteAllViews();\nshowAllColumns();\n// Step 2 - Create view1 without any sort\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncy.get('button:contains(\"Clear All\")').last().click();\ncy.get('button[data-cy=\"saveNewViewBtn\"]').click();\ncy.get('#view-name').should('exist');\ncy.get('#view-name').type(viewName);\ncy.get('button[data-cy=\"confirmNewViewBtn\"]').click();\ncy.get(\"[data-cy=\\\"filterViewItem-\".concat(viewName, \"\\\"]\")).should('exist');\ncy.get(\"[data-cy=\\\"filterViewItem-\".concat(viewName, \"\\\"]\")).should('contain.text', viewName);\n// Step 3 & 4 - Perform ASC & DESC sort for specific field\n// the test should be done to every field exist in WL that  are mentioned in the Details Tab   > Preconditions section\n// PRIORITY,PATIENT,MRN,EXAM DATE,MOD,EXAM DESCRIPTION,BODY PART,GENDER,DOB,AGE,ACCESSION,IMAGES,FACILITY,INDICATORS,READ STATUS,ASSIGNEE,LOCK STATUS,LOCKED BY,REFFERING,PROC. STATUS,RECEIVED,CODE,SOURCE,MATCH STATUS,SOURCE,MATCH STATUS\n// Priority\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\n// Patient\ncy.get('#patientName div[data-cy=\"patientColumn\"]').first().click();\ncheckSorting('#patientName div[data-cy=\"patientColumn\"]', '[data-cy=sortChip_patientName] > .chip-box', 'Patient: DESC', 'Patient: ASC');\ncy.get('#patientName div[data-cy=\"patientColumn\"]').first().click();\ncheckSorting('#patientName div[data-cy=\"patientColumn\"]', '[data-cy=sortChip_patientName] > .chip-box', 'Patient: DESC', 'Patient: ASC');\n// MRN\ncy.get('[data-cy=\"mRNColumn\"]').first().click();\ncheckSorting('[data-cy=\"mRNColumn\"]', '[data-cy=sortChip_patientMrn] > .chip-box', 'MRN: DESC', 'MRN: ASC');\ncy.get('[data-cy=\"mRNColumn\"]').first().click();\ncheckSorting('[data-cy=\"mRNColumn\"]', '[data-cy=sortChip_patientMrn] > .chip-box', 'MRN: DESC', 'MRN: ASC');\n// modalitiesString\ncy.get('#modalitiesString div[data-cy=\"modColumn\"]').first().click();\ncheckSorting('#modalitiesString div[data-cy=\"modColumn\"]', '[data-cy=sortChip_modalitiesString] > .chip-box', 'Modality: DESC', 'Modality: ASC');\ncy.get('#modalitiesString div[data-cy=\"modColumn\"]').first().click();\ncheckSorting('#modalitiesString div[data-cy=\"modColumn\"]', '[data-cy=sortChip_modalitiesString] > .chip-box', 'Modality: DESC', 'Modality: ASC');\n// examDescription\ncy.get('#examDescription div[data-cy=\"examDescriptionColumn\"]').eq(0).click();\ncheckSorting('#examDescription div[data-cy=\"examDescriptionColumn\"]', '[data-cy=sortChip_examDescription] > .chip-box', 'Exam Desc.: DESC', 'Exam Desc.: ASC');\ncy.get('#examDescription div[data-cy=\"examDescriptionColumn\"]').eq(0).click();\ncheckSorting('#examDescription div[data-cy=\"examDescriptionColumn\"]', '[data-cy=sortChip_examDescription] > .chip-box', 'Exam Desc.: DESC', 'Exam Desc.: ASC');\n// bodyPartExamined\ncy.get('#bodyPartExamined div[data-cy=\"bodyPartColumn\"]').first().click();\ncheckSorting('#bodyPartExamined div[data-cy=\"bodyPartColumn\"]', '[data-cy=sortChip_bodyPartExamined] > .chip-box', 'Body Part: DESC', 'Body Part: ASC');\ncy.get('#bodyPartExamined div[data-cy=\"bodyPartColumn\"]').first().click();\ncheckSorting('#bodyPartExamined div[data-cy=\"bodyPartColumn\"]', '[data-cy=sortChip_bodyPartExamined] > .chip-box', 'Body Part: DESC', 'Body Part: ASC');\n// patientGender\ncy.get('#patientGender div[data-cy=\"genderColumn\"]').first().click();\ncheckSorting('#patientGender div[data-cy=\"genderColumn\"]', '[data-cy=sortChip_patientGender] > .chip-box', 'Gender: DESC', 'Gender: ASC');\ncy.get('#patientGender div[data-cy=\"genderColumn\"]').first().click();\ncheckSorting('#patientGender div[data-cy=\"genderColumn\"]', '[data-cy=sortChip_patientGender] > .chip-box', 'Gender: DESC', 'Gender: ASC');\n// accessionNumber\ncy.get('#accessionNumber div[data-cy=\"accessionColumn\"]').first().click();\ncheckSorting('#accessionNumber div[data-cy=\"accessionColumn\"]', '[data-cy=sortChip_accessionNumber] > .chip-box', 'Accession: DESC', 'Accession: ASC');\ncy.get('#accessionNumber div[data-cy=\"accessionColumn\"]').first().click();\ncheckSorting('#accessionNumber div[data-cy=\"accessionColumn\"]', '[data-cy=sortChip_accessionNumber] > .chip-box', 'Accession: DESC', 'Accession: ASC');\n// imageCount\ncy.get('#imageCount div[data-cy=\"imagesColumn\"]').first().click();\ncheckSorting('#imageCount div[data-cy=\"imagesColumn\"]', '[data-cy=sortChip_imageCount] > .chip-box', 'No. of Images: DESC', 'No. of Images: ASC');\ncy.get('#imageCount div[data-cy=\"imagesColumn\"]').first().click();\ncheckSorting('#imageCount div[data-cy=\"imagesColumn\"]', '[data-cy=sortChip_imageCount] > .chip-box', 'No. of Images: DESC', 'No. of Images: ASC');\n// organizationId - facility id\ncy.get('#organizationId div[data-cy=\"facilityColumn\"]').first().click();\ncheckSorting('#organizationId div[data-cy=\"facilityColumn\"]', '[data-cy=sortChip_organizationId] > .chip-box', 'Facility: DESC', 'Facility: ASC');\ncy.get('#organizationId div[data-cy=\"facilityColumn\"]').first().click();\ncheckSorting('#organizationId div[data-cy=\"facilityColumn\"]', '[data-cy=sortChip_organizationId] > .chip-box', 'Facility: DESC', 'Facility: ASC');\n// examReason\ncy.get('#examReason div[data-cy=\"indicationsColumn\"]').first().click();\ncheckSorting('#examReason div[data-cy=\"indicationsColumn\"]', '[data-cy=sortChip_examReason] > .chip-box', 'Indications: DESC', 'Indications: ASC');\ncy.get('#examReason div[data-cy=\"indicationsColumn\"]').first().click();\ncheckSorting('#examReason div[data-cy=\"indicationsColumn\"]', '[data-cy=sortChip_examReason] > .chip-box', 'Indications: DESC', 'Indications: ASC');\n// readStatus\ncy.get('#readStatus div[data-cy=\"readStatusColumn\"]').first().click();\ncheckSorting('#readStatus div[data-cy=\"readStatusColumn\"]', '[data-cy=sortChip_readStatus] > .chip-box', 'Read Status: DESC', 'Read Status: ASC');\ncy.get('#readStatus div[data-cy=\"readStatusColumn\"]').first().click();\ncheckSorting('#readStatus div[data-cy=\"readStatusColumn\"]', '[data-cy=sortChip_readStatus] > .chip-box', 'Read Status: DESC', 'Read Status: ASC');\n// assignedName\ncy.get('#assignedName div[data-cy=\"assigneeColumn\"]').eq(0).click();\ncheckSorting('#assignedName div[data-cy=\"assigneeColumn\"]', '[data-cy=sortChip_assignedName] > .chip-box', 'Assignee: DESC', 'Assignee: ASC');\ncy.get('#assignedName div[data-cy=\"assigneeColumn\"]').eq(0).click();\ncheckSorting('#assignedName div[data-cy=\"assigneeColumn\"]', '[data-cy=sortChip_assignedName] > .chip-box', 'Assignee: DESC', 'Assignee: ASC');\n// lockStatus\ncy.get('#lockStatus div[data-cy=\"lockStatusColumn\"]').eq(0).click();\ncheckSorting('#lockStatus div[data-cy=\"lockStatusColumn\"]', '[data-cy=sortChip_lockStatus] > .chip-box', 'Lock Status: DESC', 'Lock Status: ASC');\ncy.get('#lockStatus div[data-cy=\"lockStatusColumn\"]').eq(0).click();\ncheckSorting('#lockStatus div[data-cy=\"lockStatusColumn\"]', '[data-cy=sortChip_lockStatus] > .chip-box', 'Lock Status: DESC', 'Lock Status: ASC');\n// lockedBy\ncy.get('#lockedBy div[data-cy=\"lockedByColumn\"]').eq(0).click();\ncheckSorting('#lockedBy div[data-cy=\"lockedByColumn\"]', '[data-cy=sortChip_lockedBy] > .chip-box', 'Locked By: DESC', 'Locked By: ASC');\ncy.get('#lockedBy div[data-cy=\"lockedByColumn\"]').eq(0).click();\ncheckSorting('#lockedBy div[data-cy=\"lockedByColumn\"]', '[data-cy=sortChip_lockedBy] > .chip-box', 'Locked By: DESC', 'Locked By: ASC');\n// referringPhysicianName\ncy.get('#referringPhysicianName div[data-cy=\"referringColumn\"]').first().click();\ncheckSorting('#referringPhysicianName div[data-cy=\"referringColumn\"]', '[data-cy=sortChip_referringPhysicianName] > .chip-box', 'Referring: DESC', 'Referring: ASC');\ncy.get('#referringPhysicianName div[data-cy=\"referringColumn\"]').first().click();\ncheckSorting('#referringPhysicianName div[data-cy=\"referringColumn\"]', '[data-cy=sortChip_referringPhysicianName] > .chip-box', 'Referring: DESC', 'Referring: ASC');\n// procedureStatus\ncy.get('#procedureStatus div[data-cy=\"examStatusColumn\"]').click();\ncheckSorting('div[data-cy=\"examStatusColumn\"]', '[data-cy=sortChip_procedureStatus] > .chip-box', 'Exam Status: DESC', 'Exam Status: ASC');\ncy.get('#procedureStatus div[data-cy=\"examStatusColumn\"]').click();\ncheckSorting('div[data-cy=\"examStatusColumn\"]', '[data-cy=sortChip_procedureStatus] > .chip-box', 'Exam Status: DESC', 'Exam Status: ASC');\n// procedureCode\ncy.get('#procedureCode div[data-cy=\"codeColumn\"]').eq(0).click();\ncheckSorting('#procedureCode div[data-cy=\"codeColumn\"]', '[data-cy=sortChip_procedureCode] > .chip-box', 'Code: DESC', 'Code: ASC');\ncy.get('#procedureCode div[data-cy=\"codeColumn\"]').eq(0).click();\ncheckSorting('#procedureCode div[data-cy=\"codeColumn\"]', '[data-cy=sortChip_procedureCode] > .chip-box', 'Code: DESC', 'Code: ASC');\n// source\ncy.get('#source div[data-cy=\"sourceColumn\"]').eq(0).click();\ncheckSorting('#source div[data-cy=\"sourceColumn\"]', '[data-cy=sortChip_source] > .chip-box', 'Source: DESC', 'Source: ASC');\ncy.get('#source div[data-cy=\"sourceColumn\"]').eq(0).click();\ncheckSorting('#source div[data-cy=\"sourceColumn\"]', '[data-cy=sortChip_source] > .chip-box', 'Source: DESC', 'Source: ASC');\n// matchStatus\ncy.get('#matchStatus div[data-cy=\"matchStatusColumn\"]').eq(0).click();\ncheckSorting('#matchStatus div[data-cy=\"matchStatusColumn\"]', '[data-cy=sortChip_matchStatus] > .chip-box', 'Match Status: DESC', 'Match Status: ASC');\ncy.get('#matchStatus div[data-cy=\"matchStatusColumn\"]').eq(0).click();\ncheckSorting('#matchStatus div[data-cy=\"matchStatusColumn\"]', '[data-cy=sortChip_matchStatus] > .chip-box', 'Match Status: DESC', 'Match Status: ASC');\n// unmatchedReason\ncy.get('#unmatchedReason div[data-cy=\"unmatchedReasonColumn\"]').eq(0).click();\ncheckSorting('#unmatchedReason div[data-cy=\"unmatchedReasonColumn\"]', '[data-cy=sortChip_unmatchedReason] > .chip-box', 'Unmatched Reason: DESC', 'Unmatched Reason: ASC');\ncy.get('#unmatchedReason div[data-cy=\"unmatchedReasonColumn\"]').eq(0).click();\ncheckSorting('#unmatchedReason div[data-cy=\"unmatchedReasonColumn\"]', '[data-cy=sortChip_unmatchedReason] > .chip-box', 'Unmatched Reason: DESC', 'Unmatched Reason: ASC');\n// Step 5 & 6 - Perform sort for Dates fields // TODO - incorrect - low or high, showing oldest & newest\n// Ascending order is from \"Oldest to Newest\" & Descending order is from \"Newest to Oldest\"\n// examDateTime\ncy.get('#examDateTime div[data-cy=\"examDateColumn\"]').first().click();\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\ncy.get('#examDateTime div[data-cy=\"examDateColumn\"]').first().click();\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\n// patientBirthDate\ncy.get('#patientBirthDate div[data-cy=\"dOBColumn\"]').first().click();\ncheckSorting('#patientBirthDate div[data-cy=\"dOBColumn\"]', '[data-cy=sortChip_patientBirthDate] > .chip-box', 'DOB: Youngest to Oldest', 'DOB: Oldest to Youngest');\ncy.get('#patientBirthDate div[data-cy=\"dOBColumn\"]').first().click();\ncheckSorting('#patientBirthDate div[data-cy=\"dOBColumn\"]', '[data-cy=sortChip_patientBirthDate] > .chip-box', 'DOB: Youngest to Oldest', 'DOB: Oldest to Youngest');\n// patientAge\ncy.get('#patientAge div[data-cy=\"ageColumn\"]').first().click();\ncheckSorting('#patientAge div[data-cy=\"ageColumn\"]', '[data-cy=sortChip_patientAge] > .chip-box', 'Age: Oldest to Youngest', 'Age: Youngest to Oldest');\ncy.get('#patientAge div[data-cy=\"ageColumn\"]').first().click();\ncheckSorting('#patientAge div[data-cy=\"ageColumn\"]', '[data-cy=sortChip_patientAge] > .chip-box', 'Age: Oldest to Youngest', 'Age: Youngest to Oldest');\n// receivedDateTime\ncy.get('#receivedDateTime div[data-cy=\"receivedColumn\"]').eq(0).click();\ncheckSorting('#receivedDateTime div[data-cy=\"receivedColumn\"]', '[data-cy=sortChip_receivedDateTime] > .chip-box', 'Received: Newest to Oldest', 'Received: Oldest to Newest');\ncy.get('#receivedDateTime div[data-cy=\"receivedColumn\"]').eq(0).click();\ncheckSorting('#receivedDateTime div[data-cy=\"receivedColumn\"]', '[data-cy=sortChip_receivedDateTime] > .chip-box', 'Received: Newest to Oldest', 'Received: Oldest to Newest');\ncy.get('button:contains(\"Clear All\")').last().click();\n// Step 7 - Sort Priority column\n// Priority\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\n// Step 8 - Press again on Priority column\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\n// Step 9 - Perform refresh after adding filter criteria item\ncy.get('input[data-cy=\"patientMrnFilter\"]').type('{selectall}cypress');\ncy.get('input[data-cy=\"patientMrnFilter\"]').should('have.value', 'cypress');\ncy.reload();\ncy.get('input[data-cy=\"patientMrnFilter\"]').should('have.length', 0);\n// Step 10 - clear sorting by clicking on X of the sort criteria.\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncy.get('.chips-container div[data-cy=\"sortChip_mappedPriority\"] .close').click();\ncy.get('.chips-container div[data-cy=\"sortChip_mappedPriority\"]').should('not.exist');\n// Step 10.3 - All the above should be immediate, with no delay with the exception of refresh operation itself. TODO - cannot test with cypress\n// Step 11 - when there is some sort on field go to another view back and forward\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncy.get('button[data-cy=\"saveNewViewBtn\"]').click();\ncy.get('#view-name').should('exist');\ncy.get('#view-name').type(viewName2);\ncy.get('button[data-cy=\"confirmNewViewBtn\"]').click();\ncy.get(\"[data-cy=\\\"filterViewItem-\".concat(viewName2, \"\\\"]\")).should('exist');\ncy.get(\"[data-cy=\\\"filterViewItem-\".concat(viewName2, \"\\\"]\")).should('contain.text', viewName2);\ncy.wait(configFile.tinyTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.btn-group-actions > .btn-default').length > 0) {\n        cy.get('.btn-group-actions > .btn-default').click();\n    }\n});\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\ncy.get(\"li[data-cy=\\\"filterViewItem-\".concat(viewName, \"\\\"]\")).click();\ncy.get('[data-cy=\"mRNColumn\"]').first().click();\ncheckSorting('[data-cy=\"mRNColumn\"]', '[data-cy=sortChip_patientMrn] > .chip-box', 'MRN: DESC', 'MRN: ASC');\ncy.get(\"li[data-cy=\\\"filterViewItem-\".concat(viewName, \"\\\"]\")).click();\ncy.get('body').then(function (elx) {\n    if (elx.find('.btn-group-actions > .btn-default').length > 0) {\n        cy.get('.btn-group-actions > .btn-default').click();\n    }\n});\ncy.get('#mappedPriority div[data-cy=\"priorityColumn\"]').first().click();\ncheckSorting('[data-cy=priorityColumn]', '[data-cy=sortChip_mappedPriority] > .chip-box', 'Priority: High to Low', 'Priority: Low to High');\ncheckSorting('[data-cy=examDateColumn]', '[data-cy=sortChip_examDateTime] > .chip-box', 'Exam Date: Newest to Oldest', 'Exam Date: Oldest to Newest');\n// Step 12 - delete sort criteria and perform refresh\ncy.get('.chips-container div[data-cy=\"sortChip_mappedPriority\"] .close').click();\ncy.get('.chips-container div[data-cy=\"sortChip_mappedPriority\"]').should('not.exist');\ncy.reload();\ncy.get('.chips-container div[data-cy=\"sortChip_mappedPriority\"]').should('not.exist');",
              "err": {},
              "uuid": "040c35ff-7c10-4ab0-9b10-0553bc1cad5a",
              "parentUUID": "6c802956-3b39-477f-aa1e-85e0dbc3a482",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cleanup - Delete the sorting views",
              "fullTitle": "ECP-T3295 - User wants to view sorting applied on the worklist Cleanup - Delete the sorting views",
              "timedOut": null,
              "duration": 44545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\ncommon_1.Common.navigateTo('Worklist');\ndeleteAllViews();\ncommon_1.Common.logout();\ncommon_1.Common.login(customerName, restrictedUserName, restrictedUserPassword);\ndeleteAllViews();",
              "err": {},
              "uuid": "14a2aeb5-e6ce-4285-995f-c3dd79ba2e99",
              "parentUUID": "6c802956-3b39-477f-aa1e-85e0dbc3a482",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Disable facility and cleanup",
              "fullTitle": "ECP-T3295 - User wants to view sorting applied on the worklist Disable facility and cleanup",
              "timedOut": null,
              "duration": 6822,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\nmeteor_1.Meteor.changeFacilityStatus(facilityName, false);",
              "err": {},
              "uuid": "c34b4681-d582-485f-878b-2fdc924890bf",
              "parentUUID": "6c802956-3b39-477f-aa1e-85e0dbc3a482",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4659205f-35d5-4888-8b1b-79e82b34aa27",
            "040c35ff-7c10-4ab0-9b10-0553bc1cad5a",
            "14a2aeb5-e6ce-4285-995f-c3dd79ba2e99",
            "c34b4681-d582-485f-878b-2fdc924890bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 594338,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome",
        "overwrite": true,
        "reportFilename": "[name]",
        "reportTitle": "SI PACS Automation",
        "reportPageTitle": "SI PACS Automation",
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}