{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-15T02:38:18.672Z",
    "end": "2024-12-15T02:49:15.816Z",
    "duration": 657144,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "807149b9-fc3a-4891-929d-725f6c015dd7",
      "title": "",
      "fullFile": "cypress/e2e/test-suites/ECP-T3436-ManualPatientMerge.spec.ts",
      "file": "cypress/test-suites/ECP-T3436-ManualPatientMerge.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "59ade34d-ad5a-4490-b7be-866c4110ed51",
          "title": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294)",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "ECP-T3436 - data prep",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) ECP-T3436 - data prep",
              "timedOut": null,
              "duration": 170601,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(userName, userpassword));\n        cy.reload();\n    }\n});\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\ncy.reload();\ncommon_1.Common.navigateTo('Sharing List');\ncy.waitUntil(function () { return cy.get('.pageTitle').should('be.visible'); }, { timeout: configFile.hugeTimeout });\nmeteor_1.Meteor.changeFeatures({\n    allowAPIs: true,\n    allowHl7: true,\n    allowWorklist: true,\n    allowWorkstationViewer: true,\n}, facilityName);\ncommon_1.Common.createAPIToken(\"api_token_for_org_\".concat(facilityName))\n    .then(function (res) {\n    token = res.token;\n    orgId = res.orgId;\n    console.log('token: ', token, ' , orgId: ', orgId);\n    //Upload study from resources folder\n    var examUploadCmd = \"node utils/p10UploadDriver.js -baseUri=\".concat(configFile.url, \" -apiToken=\").concat(token, \" -maxParallel=5 -data=\").concat(\"resources/a-01\", \" -keepAlive=1\");\n    cy.exec(examUploadCmd, { log: true, env: { NODE_TLS_REJECT_UNAUTHORIZED: configFile.NODE_TLS_REJECT_UNAUTHORIZED }, timeout: configFile.hugeTimeout })\n        .then(function (_a) {\n        var code = _a.code, stdout = _a.stdout, stderr = _a.stderr;\n        console.log(code, stdout, stderr);\n    });\n    cy.wait(configFile.smallTimeout);\n    header = {\n        Authorization: \"Bearer \".concat(token),\n        Accept: 'application/json; charset=utf-8',\n        'Content-Type': 'application/json; charset=utf-8'\n    };\n    cy.request({\n        url: procedureUrl,\n        method: 'POST',\n        body: getProcedureBody('cypress-e2e-test', \"\".concat(mrn, \"-1-match\"), patientName.replace('$$$', '1-match'), patientDOB, '20000202111111', 'last 1 days', \"acc-\".concat(mrn), 'the-1-match'),\n        headers: header\n    }).then(function (res) { });\n    cy.wait(configFile.smallTimeout);\n}).catch(function (err) {\n    console.log(err);\n});\n// matched one procedure\ncommon_1.Common.navigateTo('Worklist');\ncy.waitUntil(function () { return cy.get('[data-cy=\"worklistTableBody\"]', { timeout: configFile.longTimeout }).should('be.visible'); }, { timeout: configFile.longTimeout });\nresetColumns();\nmatchProcStudy(\"\".concat(mrn, \"-1-match\"), 'a-01');\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "db5dc663-f73c-4582-89e8-23660c65f1f1",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer Administrator run all PM flow",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Customer Administrator run all PM flow",
              "timedOut": null,
              "duration": 56886,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, customerAdministrator, limitedPassword);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(customerAdministrator, limitedPassword));\n        cy.reload();\n    }\n});\nrunPatientMerge('customerAdministrator', '', {}); // { datacy: 'birthDateStrFilter', val: ''}\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "69ba3d72-8338-453f-b61f-a0358348f349",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Organization Administrator run - cancel in step 1",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Organization Administrator run - cancel in step 1",
              "timedOut": null,
              "duration": 30594,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, organizationAdministrator, limitedPassword);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(organizationAdministrator, limitedPassword));\n        cy.reload();\n    }\n});\nrunPatientMerge('organizationAdministrator', 'cancelInStep1', {});\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "5ca324fb-a740-4c58-ab62-5f3cb111fa03",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Technologist run - cancel in step 2",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Technologist run - cancel in step 2",
              "timedOut": null,
              "duration": 36316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, technologist, limitedPassword);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(technologist, limitedPassword));\n        cy.reload();\n    }\n});\nrunPatientMerge('technologist', 'cancelInStep2', {});\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "c240df49-3570-4877-8cb0-12a5ddbc3979",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Super Technologist run - back from step 2 to step 1, search by MPI",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Super Technologist run - back from step 2 to step 1, search by MPI",
              "timedOut": null,
              "duration": 60699,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, superTechnologist, limitedPassword);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(superTechnologist, limitedPassword));\n        cy.reload();\n    }\n});\nrunPatientMerge('superTechnologist', 'backToStep1', { datacy: 'filtermpi', val: 'the-1-match' });\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "00b42987-f02d-4bb2-a469-5e776a87acad",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Client Services Manager run - search by accession number",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Client Services Manager run - search by accession number",
              "timedOut": null,
              "duration": 75428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, clientServicesManager, limitedPassword);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(clientServicesManager, limitedPassword));\n        cy.reload();\n    }\n});\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\nrunPatientMerge('clientServicesManager', '', { datacy: \"filteraccession\", val: \"acc-\".concat(mrn) });\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "6a7ac82e-03c5-4e83-aacf-94ac51769036",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Client Services run - back from step 3 to step 2, search by patient name",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Client Services run - back from step 3 to step 2, search by patient name",
              "timedOut": null,
              "duration": 53827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, clientServices, limitedPassword);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(clientServices, limitedPassword));\n        cy.reload();\n    }\n});\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\nrunPatientMerge('clientServices', 'backToStep2', { datacy: 'filtername', val: '1-match' });\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "1f8e4db6-2316-4a11-9020-a1d023d4d556",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Viewer Locking",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Viewer Locking",
              "timedOut": null,
              "duration": 27250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// a Client Services add to reading queue and lost\ncommon_1.Common.login(customerName, limitedUser, limitedPassword);\ncy.wait(configFile.smallTimeout);\ncy.get('body').then(function (elx) {\n    if (elx.find('.agreement').length > 0) {\n        cy.wrap(meteor_1.Meteor.acceptTermWS(limitedUser, limitedPassword));\n        cy.reload();\n    }\n});\ncommon_1.Common.navigateTo('Worklist');\ncy.wait(configFile.smallTimeout);\n// clear filters\ncy.get('[data-cy=\"filterChipsContainer\"] > .chips-layout > button')\n    .then(function ($b) { return cy.get('[data-cy=\"filterChipsContainer\"] > .chips-layout > button').first().click(); });\nfilterUnlocked();\nfilterByFacility();\nfilterOnlyMatch();\ncy.wait(configFile.smallTimeout);\ncy.get(\"[data-cy=\\\"priorityColumn\\\"]\").first().scrollIntoView();\n// add to reading queue\ncy.get(\"[data-cy=\\\"patientMrn-cell\\\"][title=\\\"\".concat(mrn, \"-1-match\\\"]\")).first().rightclick({ force: true });\ncy.wait(configFile.smallTimeout);\ncy.get('[data-cy=\"addToReadingQueue\"]').rightclick();\ncy.get('[data-cy=\"addToReadingQueue\"]').focused().click();\ncy.wait(configFile.smallTimeout);",
              "err": {},
              "uuid": "28ab475f-446f-4d91-a8bf-71abb83180c0",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check viewer lock",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) check viewer lock",
              "timedOut": null,
              "duration": 23456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// a customer Admin try patient merge of the organizationAdministrator procedure\ncommon_1.Common.login(customerName, customerAdministrator, limitedPassword);\ncy.wait(configFile.smallTimeout);\nrunPatientMerge('1-match', 'checkViewerLock', {});\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "fdd57e5a-529f-41d2-9d17-7058a86e7b8d",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unlock view",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Unlock view",
              "timedOut": null,
              "duration": 20948,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, limitedUser, limitedPassword);\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.navigateTo('Worklist');\ncy.wait(configFile.smallTimeout);\nclearReadingQueue();\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "ac0d9f58-6b09-430a-b8b1-03618a0d16d2",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Admin locking",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Admin locking",
              "timedOut": null,
              "duration": 20648,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// a organization admin start the patient merge flow, and lost after step 1\ncommon_1.Common.login(customerName, organizationAdministrator, limitedPassword);\ncy.wait(configFile.smallTimeout);\nrunPatientMerge('organizationAdministrator', 'adminLock', {});",
              "err": {},
              "uuid": "a3a14558-2f6b-480b-9f0b-67b40404b562",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check Admin locking",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Check Admin locking",
              "timedOut": null,
              "duration": 24126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// a customer Admin try patient merge of the organizationAdministrator procedure\ncommon_1.Common.login(customerName, customerAdministrator, limitedPassword);\ncy.wait(configFile.smallTimeout);\nrunPatientMerge('organizationAdministrator', 'checkAdminLock', {});\n// check another admin-locked effects\ncy.get(\"[data-cy=\\\"priorityColumn\\\"]\").first().scrollIntoView();\ncy.get(\"[data-cy=\\\"patientMrn-cell\\\"][title=\\\"\".concat(mrn, \"-organizationAdministrator\\\"]\")).first().rightclick({ force: true });\ncy.get('#grid-context-menu [data-cy=\"workflowAdministration\"]').click();\ncy.get('[data-cy=\"matchUnmatch\"] > div').invoke('attr', \"aria-disabled\").should('eq', 'true');\ncy.get('[data-cy=\"editExam\"] > div').invoke('attr', \"aria-disabled\").should('eq', 'true');\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "0e73eb34-17e9-45bc-86ab-de5d182e4699",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Admin Unlock",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Admin Unlock",
              "timedOut": null,
              "duration": 11909,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, organizationAdministrator, limitedPassword);\ncy.wait(configFile.smallTimeout);\ncommon_1.Common.logout();",
              "err": {},
              "uuid": "c6e5e123-2006-46ff-a0f5-e4fb8ce24869",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Disable facility and cleanup",
              "fullTitle": "ECP-T3436-Manual Patient Merge (failing due to ECP-22294) Disable facility and cleanup",
              "timedOut": null,
              "duration": 6598,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login();\nmeteor_1.Meteor.changeFacilityStatus(facilityName, false);",
              "err": {},
              "uuid": "8930be78-429a-4efa-baa3-8c6d3de3521f",
              "parentUUID": "59ade34d-ad5a-4490-b7be-866c4110ed51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db5dc663-f73c-4582-89e8-23660c65f1f1",
            "69ba3d72-8338-453f-b61f-a0358348f349",
            "5ca324fb-a740-4c58-ab62-5f3cb111fa03",
            "c240df49-3570-4877-8cb0-12a5ddbc3979",
            "00b42987-f02d-4bb2-a469-5e776a87acad",
            "6a7ac82e-03c5-4e83-aacf-94ac51769036",
            "1f8e4db6-2316-4a11-9020-a1d023d4d556",
            "28ab475f-446f-4d91-a8bf-71abb83180c0",
            "fdd57e5a-529f-41d2-9d17-7058a86e7b8d",
            "ac0d9f58-6b09-430a-b8b1-03618a0d16d2",
            "a3a14558-2f6b-480b-9f0b-67b40404b562",
            "0e73eb34-17e9-45bc-86ab-de5d182e4699",
            "c6e5e123-2006-46ff-a0f5-e4fb8ce24869",
            "8930be78-429a-4efa-baa3-8c6d3de3521f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 619286,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome",
        "overwrite": true,
        "reportFilename": "[name]",
        "reportTitle": "SI PACS Automation",
        "reportPageTitle": "SI PACS Automation",
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}