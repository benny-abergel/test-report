{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-15T03:19:31.895Z",
    "end": "2024-12-15T03:22:02.009Z",
    "duration": 150114,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b0d8b5be-4cc4-4c24-9626-3488a80953c9",
      "title": "",
      "fullFile": "cypress/e2e/test-suites/ECP-T2532-PACS Workflow - Patient Information.spec.ts",
      "file": "cypress/test-suites/ECP-T2532-PACS Workflow - Patient Information.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1b5f7e94-f009-411a-b681-1d2602e7ad28",
          "title": "ECP-T2532-PACS Workflow - Patient Information",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "ECP-T2543",
              "fullTitle": "ECP-T2532-PACS Workflow - Patient Information ECP-T2543",
              "timedOut": null,
              "duration": 133049,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\ncommon_1.Common.switchToCustomer(customerName, configFile.timeout, true);\ncommon_1.Common.switchToFacility(facilityName);\nmeteor_1.Meteor.changeFeatures({\n    allowAPIs: true,\n    allowHl7: true,\n    allowWorklist: true\n}, facilityName);\nvar mrn = crypto.randomUUID();\nvar altMrn = crypto.randomUUID();\ncommon_1.Common.createAPIToken(\"api_token_for_org_\".concat(facilityName)).then(function (res) {\n    var token = res.token, orgId = res.orgId;\n    common_1.Common.uploadProc({ name: 'Natasha Romanoff', token: token, mrn: mrn });\n    common_1.Common.uploadProc({ name: 'Greg Hirsh', token: token, mrn: altMrn });\n});\ncy.reload();\ncommon_1.Common.navigateTo('Worklist');\nworklist_common_2.Worklist.clearAllFilters();\nworklist_common_1.Worklist.getRowsByMRN(mrn).find('[data-cy=\"examDateTime-cell\"]').rightclick({ force: true });\nelement_handler_1.elementHandler.element('workflowAdministration').click();\nelement_handler_1.elementHandler.element('editExam').click();\ncy.waitUntil(function () { return cy.get('button[class=\"close\"]').should('be.visible'); }, { timeout: configFile.waitUntilTimeout });\ncy.get('input[value=\"Romanoff, Natasha\"]').should('be.visible');\nelement_handler_1.elementHandler.element('birthDateStrFilter').should('have.value', '03-08-1958');\ncy.get('span[title=\"Female\"]').should('be.visible');\ncy.get('input[name=\"mrn\"]').should('have.value', mrn);\ncy.get('input[name=\"mpi\"]').should('have.value', '');\ncy.get('input[value=\"Mirth\"]').should('be.visible');\ncy.get('label:contains(Primary Care Physician) + input').should('be.visible');\ncy.get('input[value=\"123 Fake Street\"]').should('be.visible');\ncy.get('input[value=\"Springfield\"]').should('be.visible');\ncy.get('span[title=\"California\"]').should('be.visible');\ncy.get('input[value=\"12345\"]').should('be.visible');\ncy.contains('button', 'Close').click();\nworklist_common_1.Worklist.getRowsByMRN(mrn).find('[data-cy=\"examDateTime-cell\"]').rightclick({ force: true });\nelement_handler_1.elementHandler.element('workflowAdministration').click();\nelement_handler_1.elementHandler.element('editExam').click();\ncy.contains('button', 'Edit').click();\ncy.get('input[value=\"Romanoff, Natasha\"]').should('not.have.attr', 'readonly');\nelement_handler_1.elementHandler.element('birthDateStrFilter').should('not.have.attr', 'disabled');\ncy.get('.patient-procedure-study-modal > .modal-content').contains('div', 'Gender').find('[role=\"combobox\"]').invoke('attr', 'aria-disabled').should('eq', \"false\");\ncy.get('input[name=\"mrn\"]').should('not.have.attr', 'readonly');\ncy.get('input[name=\"mpi\"]').should('not.have.attr', 'readonly');\ncy.get('label:contains(Primary Care Physician) + input').should('not.have.attr', 'readonly');\ncy.get('input[value=\"123 Fake Street\"]').should('not.have.attr', 'readonly');\ncy.get('input[value=\"Springfield\"]').should('not.have.attr', 'readonly');\ncy.get('span[title=\"California\"]').should('not.have.attr', 'readonly');\ncy.get('input[value=\"12345\"]').should('not.have.attr', 'readonly');\ncy.get('input[value=\"Mirth\"]').should('be.visible');\ncy.get('input[value=\"Romanoff, Natasha\"]').parent().invoke('hasClass', 'required').should('be.true');\nelement_handler_1.elementHandler.element('birthDateStrFilter').parent().invoke('hasClass', 'required').should('be.true');\ncy.get('input[name=\"mrn\"]').parent().invoke('hasClass', 'required').should('be.true');\ncy.get('.patient-procedure-study-modal > .modal-content').contains('button', 'Save').should('have.attr', 'disabled');\ncy.get('input[name=\"mrn\"]').type('f', { force: true });\ncy.get('input[name=\"mrn\"]').parent().find('i[class=\"fa fa-exclamation-triangle\"]').should('be.visible');\ncy.get('input[value=\"Romanoff, Natasha\"]').click({ force: true });\ncy.get('[id*=\"patientNamePopover\"]').should('be.visible');\ncy.get('input[name=\"firstName\"]').should('have.value', 'Natasha');\ncy.get('input[name=\"lastName\"]').should('have.value', 'Romanoff');\ncy.get('[id*=\"patientNamePopover\"]').contains('button', 'OK').should('be.visible');\ncy.get('input[name=\"firstName\"]').clear({ force: true });\ncy.get('[id*=\"patientNamePopover\"]').contains('button', 'OK').click({ force: true });\ncy.get('input[name=\"firstName\"]').parent().should('have.class', 'has-error');\ncy.get('[id*=\"patientNamePopover\"]').contains('button', 'Cancel').click({ force: true });\ncy.get('input[value=\"Romanoff, Natasha\"]').click({ force: true });\ncy.get('input[name=\"firstName\"]').clear({ force: true }).type(\"Amy\", { force: true });\ncy.get('[id*=\"patientNamePopover\"]').contains('button', 'OK').click({ force: true });\ncy.get('.patient-procedure-study-modal > .modal-content').contains('div', 'Gender').find('[role=\"combobox\"]').click({ force: true });\ncy.get('div[role=\"listbox\"]').should('contain.text', 'Ambiguous');\ncy.get('div[role=\"listbox\"]').should('contain.text', 'Female');\ncy.get('div[role=\"listbox\"]').should('contain.text', 'Male');\ncy.get('div[role=\"listbox\"]').should('contain.text', 'Non-Binary');\ncy.get('div[role=\"listbox\"]').should('contain.text', 'Other');\ncy.get('div[role=\"listbox\"]').should('contain.text', 'Unknown');\nelement_handler_1.elementHandler.element('birthDateStrFilter').type('{backspace}f');\nelement_handler_1.elementHandler.element('birthDateStrFilter').should('not.have.value', '03-08-195f');\nelement_handler_1.elementHandler.element('birthDateStrFilter').type('8');\ncy.get('[name=\"homePhone\"]').type('{backspace}f');\ncy.get('[name=\"homePhone\"]').should('not.have.value', '(123)123-123f');\ncy.get('[name=\"homePhone\"]').type('4');\ncy.get('.patient-procedure-study-modal > .modal-content').find('input[class=\"form-control flatpickr-input\"]').first().should('have.attr', 'readonly');\ncy.get('.patient-procedure-study-modal > .modal-content').find('input[class=\"form-control flatpickr-input\"]').first().click({ force: true });\ncy.get('[class=\"flatpickr-calendar hasTime animate open arrowBottom arrowLeft\"]').should('be.visible');\ncy.get('.patient-procedure-study-modal > .modal-content').find('input[class=\"form-control flatpickr-input\"]').eq(1).should('have.attr', 'readonly');\ncy.get('.patient-procedure-study-modal > .modal-content').find('input[class=\"form-control flatpickr-input\"]').eq(1).click({ force: true });\ncy.get('[class=\"flatpickr-calendar hasTime animate open arrowTop arrowLeft\"]').should('be.visible');\ncy.get('.patient-procedure-study-modal > .modal-content').contains('button', 'Save').click();\ncy.get('div[class=\"modal-body\"]').find('tbody').find('tr:not([class=\"DiffTable__group-label\"])').its('length').should('eq', 2);\ncy.contains('button', 'Discard Changes').click();\ncy.contains('button', 'No').click();\ncy.get('[title=\"Romanoff, Amy\"]').should('be.visible');\ncy.get(\"[title=\\\"\".concat(mrn, \"f\\\"]\")).should('be.visible');\ncy.get(\"[title=\\\"Romanoff, Natasha\\\"]\").should('be.visible');\ncy.get(\"[title=\\\"\".concat(mrn, \"\\\"]\")).should('be.visible');\ncy.contains('button', 'Confirm').click();\nworklist_common_1.Worklist.refreshWL();\nworklist_common_1.Worklist.getRowsByMRN(\"\".concat(mrn, \"f\")).should('be.visible');\nworklist_common_1.Worklist.getRowsByMRN(\"\".concat(mrn, \"f\")).find('[data-cy=\"examDateTime-cell\"]').rightclick({ force: true });\nelement_handler_1.elementHandler.element('workflowAdministration').click();\nelement_handler_1.elementHandler.element('editExam').click();\ncy.get('input[value=\"Romanoff, Amy\"]').should('be.visible');\ncy.get(\"input[value=\\\"\".concat(mrn, \"f\\\"]\")).should('be.visible');\ncy.contains('button', 'Edit').click();\ncy.get('.patient-procedure-study-modal > .modal-content').find('input[name=\"mrn\"]').clear().type(altMrn, { force: true });\ncy.get('.patient-procedure-study-modal > .modal-content').contains('button', 'Save').click();\ncy.contains('button', 'Confirm').click();\ncy.get('[data-cy=\"duplicateMrnHeaderText\"]').should('contain', 'Your changes were not saved because this MRN is assigned to another patient.').should('be.visible');\ncy.contains('button', 'Close').click();\ncy.contains('button', 'Back').click();\nelement_handler_1.elementHandler.element('birthDateStrFilter').type('{backspace}', { force: true });\nworklist_common_1.Worklist.waitForElement('i[class=\"fa fa-exclamation-circle\"]');\ncy.get('i[class=\"fa fa-exclamation-circle\"]').should('be.visible');\ncy.contains('button', 'Cancel').click();\ncy.contains('button', 'Yes, Discard Changes').click();\ncy.contains('button', 'Close').click();\nworklist_common_1.Worklist.getRowsByMRN(\"\".concat(mrn, \"f\")).find('[data-cy=\"examDateTime-cell\"]').rightclick({ force: true });\nelement_handler_1.elementHandler.element('hipaaLog').click();\ncy.contains('Patient Updated').should('be.visible');",
              "err": {},
              "uuid": "c5fafb4b-6f44-4c8b-9682-fcb83d1c18c1",
              "parentUUID": "1b5f7e94-f009-411a-b681-1d2602e7ad28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Disable facility and cleanup",
              "fullTitle": "ECP-T2532-PACS Workflow - Patient Information Disable facility and cleanup",
              "timedOut": null,
              "duration": 7235,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "common_1.Common.login(customerName, userName, userpassword);\nmeteor_1.Meteor.changeFacilityStatus(facilityName, false);",
              "err": {},
              "uuid": "c24b1056-87f4-4411-bfc8-3164fa3ccbe8",
              "parentUUID": "1b5f7e94-f009-411a-b681-1d2602e7ad28",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5fafb4b-6f44-4c8b-9682-fcb83d1c18c1",
            "c24b1056-87f4-4411-bfc8-3164fa3ccbe8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 140284,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[name]",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome",
        "overwrite": true,
        "reportFilename": "[name]",
        "reportTitle": "SI PACS Automation",
        "reportPageTitle": "SI PACS Automation",
        "autoOpen": false
      },
      "version": "6.2.0"
    }
  }
}